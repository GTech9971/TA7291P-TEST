

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May  9 22:49:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 28/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1827 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0095                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009B                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     0111                     	;# 
   111     0112                     	;# 
   112     0113                     	;# 
   113     0114                     	;# 
   114     0115                     	;# 
   115     0116                     	;# 
   116     0117                     	;# 
   117     0118                     	;# 
   118     0119                     	;# 
   119     011A                     	;# 
   120     011B                     	;# 
   121     011D                     	;# 
   122     011E                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0191                     	;# 
   126     0191                     	;# 
   127     0192                     	;# 
   128     0193                     	;# 
   129     0193                     	;# 
   130     0193                     	;# 
   131     0194                     	;# 
   132     0195                     	;# 
   133     0196                     	;# 
   134     0199                     	;# 
   135     019A                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019C                     	;# 
   142     019D                     	;# 
   143     019E                     	;# 
   144     019F                     	;# 
   145     020C                     	;# 
   146     020D                     	;# 
   147     0211                     	;# 
   148     0211                     	;# 
   149     0212                     	;# 
   150     0212                     	;# 
   151     0213                     	;# 
   152     0213                     	;# 
   153     0214                     	;# 
   154     0214                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0215                     	;# 
   158     0216                     	;# 
   159     0216                     	;# 
   160     0217                     	;# 
   161     0217                     	;# 
   162     0219                     	;# 
   163     021A                     	;# 
   164     021B                     	;# 
   165     021C                     	;# 
   166     021D                     	;# 
   167     021E                     	;# 
   168     021F                     	;# 
   169     0291                     	;# 
   170     0291                     	;# 
   171     0292                     	;# 
   172     0293                     	;# 
   173     0294                     	;# 
   174     0295                     	;# 
   175     0295                     	;# 
   176     0296                     	;# 
   177     0298                     	;# 
   178     0298                     	;# 
   179     0299                     	;# 
   180     029A                     	;# 
   181     029B                     	;# 
   182     029C                     	;# 
   183     029C                     	;# 
   184     029D                     	;# 
   185     029E                     	;# 
   186     029E                     	;# 
   187     0311                     	;# 
   188     0311                     	;# 
   189     0312                     	;# 
   190     0313                     	;# 
   191     0318                     	;# 
   192     0318                     	;# 
   193     0319                     	;# 
   194     031A                     	;# 
   195     0394                     	;# 
   196     0395                     	;# 
   197     0396                     	;# 
   198     039A                     	;# 
   199     039C                     	;# 
   200     039D                     	;# 
   201     039E                     	;# 
   202     039F                     	;# 
   203     0415                     	;# 
   204     0416                     	;# 
   205     0417                     	;# 
   206     041C                     	;# 
   207     041D                     	;# 
   208     041E                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     0091                     	;# 
   252     0092                     	;# 
   253     0093                     	;# 
   254     0094                     	;# 
   255     0095                     	;# 
   256     0096                     	;# 
   257     0097                     	;# 
   258     0098                     	;# 
   259     0099                     	;# 
   260     009A                     	;# 
   261     009B                     	;# 
   262     009B                     	;# 
   263     009C                     	;# 
   264     009D                     	;# 
   265     009E                     	;# 
   266     010C                     	;# 
   267     010D                     	;# 
   268     0111                     	;# 
   269     0112                     	;# 
   270     0113                     	;# 
   271     0114                     	;# 
   272     0115                     	;# 
   273     0116                     	;# 
   274     0117                     	;# 
   275     0118                     	;# 
   276     0119                     	;# 
   277     011A                     	;# 
   278     011B                     	;# 
   279     011D                     	;# 
   280     011E                     	;# 
   281     018C                     	;# 
   282     018D                     	;# 
   283     0191                     	;# 
   284     0191                     	;# 
   285     0192                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0193                     	;# 
   289     0194                     	;# 
   290     0195                     	;# 
   291     0196                     	;# 
   292     0199                     	;# 
   293     019A                     	;# 
   294     019B                     	;# 
   295     019B                     	;# 
   296     019B                     	;# 
   297     019B                     	;# 
   298     019C                     	;# 
   299     019C                     	;# 
   300     019D                     	;# 
   301     019E                     	;# 
   302     019F                     	;# 
   303     020C                     	;# 
   304     020D                     	;# 
   305     0211                     	;# 
   306     0211                     	;# 
   307     0212                     	;# 
   308     0212                     	;# 
   309     0213                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0214                     	;# 
   313     0215                     	;# 
   314     0215                     	;# 
   315     0215                     	;# 
   316     0216                     	;# 
   317     0216                     	;# 
   318     0217                     	;# 
   319     0217                     	;# 
   320     0219                     	;# 
   321     021A                     	;# 
   322     021B                     	;# 
   323     021C                     	;# 
   324     021D                     	;# 
   325     021E                     	;# 
   326     021F                     	;# 
   327     0291                     	;# 
   328     0291                     	;# 
   329     0292                     	;# 
   330     0293                     	;# 
   331     0294                     	;# 
   332     0295                     	;# 
   333     0295                     	;# 
   334     0296                     	;# 
   335     0298                     	;# 
   336     0298                     	;# 
   337     0299                     	;# 
   338     029A                     	;# 
   339     029B                     	;# 
   340     029C                     	;# 
   341     029C                     	;# 
   342     029D                     	;# 
   343     029E                     	;# 
   344     029E                     	;# 
   345     0311                     	;# 
   346     0311                     	;# 
   347     0312                     	;# 
   348     0313                     	;# 
   349     0318                     	;# 
   350     0318                     	;# 
   351     0319                     	;# 
   352     031A                     	;# 
   353     0394                     	;# 
   354     0395                     	;# 
   355     0396                     	;# 
   356     039A                     	;# 
   357     039C                     	;# 
   358     039D                     	;# 
   359     039E                     	;# 
   360     039F                     	;# 
   361     0415                     	;# 
   362     0416                     	;# 
   363     0417                     	;# 
   364     041C                     	;# 
   365     041D                     	;# 
   366     041E                     	;# 
   367     0FE4                     	;# 
   368     0FE5                     	;# 
   369     0FE6                     	;# 
   370     0FE7                     	;# 
   371     0FE8                     	;# 
   372     0FE9                     	;# 
   373     0FEA                     	;# 
   374     0FEB                     	;# 
   375     0FED                     	;# 
   376     0FEE                     	;# 
   377     0FEF                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0016                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001B                     	;# 
   404     001C                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     008C                     	;# 
   408     008D                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0094                     	;# 
   413     0095                     	;# 
   414     0096                     	;# 
   415     0097                     	;# 
   416     0098                     	;# 
   417     0099                     	;# 
   418     009A                     	;# 
   419     009B                     	;# 
   420     009B                     	;# 
   421     009C                     	;# 
   422     009D                     	;# 
   423     009E                     	;# 
   424     010C                     	;# 
   425     010D                     	;# 
   426     0111                     	;# 
   427     0112                     	;# 
   428     0113                     	;# 
   429     0114                     	;# 
   430     0115                     	;# 
   431     0116                     	;# 
   432     0117                     	;# 
   433     0118                     	;# 
   434     0119                     	;# 
   435     011A                     	;# 
   436     011B                     	;# 
   437     011D                     	;# 
   438     011E                     	;# 
   439     018C                     	;# 
   440     018D                     	;# 
   441     0191                     	;# 
   442     0191                     	;# 
   443     0192                     	;# 
   444     0193                     	;# 
   445     0193                     	;# 
   446     0193                     	;# 
   447     0194                     	;# 
   448     0195                     	;# 
   449     0196                     	;# 
   450     0199                     	;# 
   451     019A                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019B                     	;# 
   456     019C                     	;# 
   457     019C                     	;# 
   458     019D                     	;# 
   459     019E                     	;# 
   460     019F                     	;# 
   461     020C                     	;# 
   462     020D                     	;# 
   463     0211                     	;# 
   464     0211                     	;# 
   465     0212                     	;# 
   466     0212                     	;# 
   467     0213                     	;# 
   468     0213                     	;# 
   469     0214                     	;# 
   470     0214                     	;# 
   471     0215                     	;# 
   472     0215                     	;# 
   473     0215                     	;# 
   474     0216                     	;# 
   475     0216                     	;# 
   476     0217                     	;# 
   477     0217                     	;# 
   478     0219                     	;# 
   479     021A                     	;# 
   480     021B                     	;# 
   481     021C                     	;# 
   482     021D                     	;# 
   483     021E                     	;# 
   484     021F                     	;# 
   485     0291                     	;# 
   486     0291                     	;# 
   487     0292                     	;# 
   488     0293                     	;# 
   489     0294                     	;# 
   490     0295                     	;# 
   491     0295                     	;# 
   492     0296                     	;# 
   493     0298                     	;# 
   494     0298                     	;# 
   495     0299                     	;# 
   496     029A                     	;# 
   497     029B                     	;# 
   498     029C                     	;# 
   499     029C                     	;# 
   500     029D                     	;# 
   501     029E                     	;# 
   502     029E                     	;# 
   503     0311                     	;# 
   504     0311                     	;# 
   505     0312                     	;# 
   506     0313                     	;# 
   507     0318                     	;# 
   508     0318                     	;# 
   509     0319                     	;# 
   510     031A                     	;# 
   511     0394                     	;# 
   512     0395                     	;# 
   513     0396                     	;# 
   514     039A                     	;# 
   515     039C                     	;# 
   516     039D                     	;# 
   517     039E                     	;# 
   518     039F                     	;# 
   519     0415                     	;# 
   520     0416                     	;# 
   521     0417                     	;# 
   522     041C                     	;# 
   523     041D                     	;# 
   524     041E                     	;# 
   525     0FE4                     	;# 
   526     0FE5                     	;# 
   527     0FE6                     	;# 
   528     0FE7                     	;# 
   529     0FE8                     	;# 
   530     0FE9                     	;# 
   531     0FEA                     	;# 
   532     0FEB                     	;# 
   533     0FED                     	;# 
   534     0FEE                     	;# 
   535     0FEF                     	;# 
   536     0000                     	;# 
   537     0001                     	;# 
   538     0002                     	;# 
   539     0003                     	;# 
   540     0004                     	;# 
   541     0005                     	;# 
   542     0006                     	;# 
   543     0007                     	;# 
   544     0008                     	;# 
   545     0009                     	;# 
   546     000A                     	;# 
   547     000B                     	;# 
   548     000C                     	;# 
   549     000D                     	;# 
   550     0011                     	;# 
   551     0012                     	;# 
   552     0013                     	;# 
   553     0014                     	;# 
   554     0015                     	;# 
   555     0016                     	;# 
   556     0016                     	;# 
   557     0017                     	;# 
   558     0018                     	;# 
   559     0019                     	;# 
   560     001A                     	;# 
   561     001B                     	;# 
   562     001C                     	;# 
   563     001E                     	;# 
   564     001F                     	;# 
   565     008C                     	;# 
   566     008D                     	;# 
   567     0091                     	;# 
   568     0092                     	;# 
   569     0093                     	;# 
   570     0094                     	;# 
   571     0095                     	;# 
   572     0096                     	;# 
   573     0097                     	;# 
   574     0098                     	;# 
   575     0099                     	;# 
   576     009A                     	;# 
   577     009B                     	;# 
   578     009B                     	;# 
   579     009C                     	;# 
   580     009D                     	;# 
   581     009E                     	;# 
   582     010C                     	;# 
   583     010D                     	;# 
   584     0111                     	;# 
   585     0112                     	;# 
   586     0113                     	;# 
   587     0114                     	;# 
   588     0115                     	;# 
   589     0116                     	;# 
   590     0117                     	;# 
   591     0118                     	;# 
   592     0119                     	;# 
   593     011A                     	;# 
   594     011B                     	;# 
   595     011D                     	;# 
   596     011E                     	;# 
   597     018C                     	;# 
   598     018D                     	;# 
   599     0191                     	;# 
   600     0191                     	;# 
   601     0192                     	;# 
   602     0193                     	;# 
   603     0193                     	;# 
   604     0193                     	;# 
   605     0194                     	;# 
   606     0195                     	;# 
   607     0196                     	;# 
   608     0199                     	;# 
   609     019A                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019B                     	;# 
   614     019C                     	;# 
   615     019C                     	;# 
   616     019D                     	;# 
   617     019E                     	;# 
   618     019F                     	;# 
   619     020C                     	;# 
   620     020D                     	;# 
   621     0211                     	;# 
   622     0211                     	;# 
   623     0212                     	;# 
   624     0212                     	;# 
   625     0213                     	;# 
   626     0213                     	;# 
   627     0214                     	;# 
   628     0214                     	;# 
   629     0215                     	;# 
   630     0215                     	;# 
   631     0215                     	;# 
   632     0216                     	;# 
   633     0216                     	;# 
   634     0217                     	;# 
   635     0217                     	;# 
   636     0219                     	;# 
   637     021A                     	;# 
   638     021B                     	;# 
   639     021C                     	;# 
   640     021D                     	;# 
   641     021E                     	;# 
   642     021F                     	;# 
   643     0291                     	;# 
   644     0291                     	;# 
   645     0292                     	;# 
   646     0293                     	;# 
   647     0294                     	;# 
   648     0295                     	;# 
   649     0295                     	;# 
   650     0296                     	;# 
   651     0298                     	;# 
   652     0298                     	;# 
   653     0299                     	;# 
   654     029A                     	;# 
   655     029B                     	;# 
   656     029C                     	;# 
   657     029C                     	;# 
   658     029D                     	;# 
   659     029E                     	;# 
   660     029E                     	;# 
   661     0311                     	;# 
   662     0311                     	;# 
   663     0312                     	;# 
   664     0313                     	;# 
   665     0318                     	;# 
   666     0318                     	;# 
   667     0319                     	;# 
   668     031A                     	;# 
   669     0394                     	;# 
   670     0395                     	;# 
   671     0396                     	;# 
   672     039A                     	;# 
   673     039C                     	;# 
   674     039D                     	;# 
   675     039E                     	;# 
   676     039F                     	;# 
   677     0415                     	;# 
   678     0416                     	;# 
   679     0417                     	;# 
   680     041C                     	;# 
   681     041D                     	;# 
   682     041E                     	;# 
   683     0FE4                     	;# 
   684     0FE5                     	;# 
   685     0FE6                     	;# 
   686     0FE7                     	;# 
   687     0FE8                     	;# 
   688     0FE9                     	;# 
   689     0FEA                     	;# 
   690     0FEB                     	;# 
   691     0FED                     	;# 
   692     0FEE                     	;# 
   693     0FEF                     	;# 
   694     0000                     	;# 
   695     0001                     	;# 
   696     0002                     	;# 
   697     0003                     	;# 
   698     0004                     	;# 
   699     0005                     	;# 
   700     0006                     	;# 
   701     0007                     	;# 
   702     0008                     	;# 
   703     0009                     	;# 
   704     000A                     	;# 
   705     000B                     	;# 
   706     000C                     	;# 
   707     000D                     	;# 
   708     0011                     	;# 
   709     0012                     	;# 
   710     0013                     	;# 
   711     0014                     	;# 
   712     0015                     	;# 
   713     0016                     	;# 
   714     0016                     	;# 
   715     0017                     	;# 
   716     0018                     	;# 
   717     0019                     	;# 
   718     001A                     	;# 
   719     001B                     	;# 
   720     001C                     	;# 
   721     001E                     	;# 
   722     001F                     	;# 
   723     008C                     	;# 
   724     008D                     	;# 
   725     0091                     	;# 
   726     0092                     	;# 
   727     0093                     	;# 
   728     0094                     	;# 
   729     0095                     	;# 
   730     0096                     	;# 
   731     0097                     	;# 
   732     0098                     	;# 
   733     0099                     	;# 
   734     009A                     	;# 
   735     009B                     	;# 
   736     009B                     	;# 
   737     009C                     	;# 
   738     009D                     	;# 
   739     009E                     	;# 
   740     010C                     	;# 
   741     010D                     	;# 
   742     0111                     	;# 
   743     0112                     	;# 
   744     0113                     	;# 
   745     0114                     	;# 
   746     0115                     	;# 
   747     0116                     	;# 
   748     0117                     	;# 
   749     0118                     	;# 
   750     0119                     	;# 
   751     011A                     	;# 
   752     011B                     	;# 
   753     011D                     	;# 
   754     011E                     	;# 
   755     018C                     	;# 
   756     018D                     	;# 
   757     0191                     	;# 
   758     0191                     	;# 
   759     0192                     	;# 
   760     0193                     	;# 
   761     0193                     	;# 
   762     0193                     	;# 
   763     0194                     	;# 
   764     0195                     	;# 
   765     0196                     	;# 
   766     0199                     	;# 
   767     019A                     	;# 
   768     019B                     	;# 
   769     019B                     	;# 
   770     019B                     	;# 
   771     019B                     	;# 
   772     019C                     	;# 
   773     019C                     	;# 
   774     019D                     	;# 
   775     019E                     	;# 
   776     019F                     	;# 
   777     020C                     	;# 
   778     020D                     	;# 
   779     0211                     	;# 
   780     0211                     	;# 
   781     0212                     	;# 
   782     0212                     	;# 
   783     0213                     	;# 
   784     0213                     	;# 
   785     0214                     	;# 
   786     0214                     	;# 
   787     0215                     	;# 
   788     0215                     	;# 
   789     0215                     	;# 
   790     0216                     	;# 
   791     0216                     	;# 
   792     0217                     	;# 
   793     0217                     	;# 
   794     0219                     	;# 
   795     021A                     	;# 
   796     021B                     	;# 
   797     021C                     	;# 
   798     021D                     	;# 
   799     021E                     	;# 
   800     021F                     	;# 
   801     0291                     	;# 
   802     0291                     	;# 
   803     0292                     	;# 
   804     0293                     	;# 
   805     0294                     	;# 
   806     0295                     	;# 
   807     0295                     	;# 
   808     0296                     	;# 
   809     0298                     	;# 
   810     0298                     	;# 
   811     0299                     	;# 
   812     029A                     	;# 
   813     029B                     	;# 
   814     029C                     	;# 
   815     029C                     	;# 
   816     029D                     	;# 
   817     029E                     	;# 
   818     029E                     	;# 
   819     0311                     	;# 
   820     0311                     	;# 
   821     0312                     	;# 
   822     0313                     	;# 
   823     0318                     	;# 
   824     0318                     	;# 
   825     0319                     	;# 
   826     031A                     	;# 
   827     0394                     	;# 
   828     0395                     	;# 
   829     0396                     	;# 
   830     039A                     	;# 
   831     039C                     	;# 
   832     039D                     	;# 
   833     039E                     	;# 
   834     039F                     	;# 
   835     0415                     	;# 
   836     0416                     	;# 
   837     0417                     	;# 
   838     041C                     	;# 
   839     041D                     	;# 
   840     041E                     	;# 
   841     0FE4                     	;# 
   842     0FE5                     	;# 
   843     0FE6                     	;# 
   844     0FE7                     	;# 
   845     0FE8                     	;# 
   846     0FE9                     	;# 
   847     0FEA                     	;# 
   848     0FEB                     	;# 
   849     0FED                     	;# 
   850     0FEE                     	;# 
   851     0FEF                     	;# 
   852                           
   853                           	psect	idataBANK0
   854     069D                     __pidataBANK0:
   855                           
   856                           ;initializer for main@F2836
   857     069D  3400               	retlw	0
   858     069E  3401               	retlw	1
   859     069F  3408               	retlw	8
   860     06A0  3400               	retlw	0
   861     06A1  3400               	retlw	0
   862     001C                     _T2CON	set	28
   863     0011                     _PIR1bits	set	17
   864     001A                     _TMR2	set	26
   865     001B                     _PR2	set	27
   866     0097                     _WDTCON	set	151
   867     0098                     _OSCTUNE	set	152
   868     0099                     _OSCCON	set	153
   869     0095                     _OPTION_REGbits	set	149
   870     008D                     _TRISB	set	141
   871     008C                     _TRISA	set	140
   872     0116                     _BORCON	set	278
   873     011E                     _APFCON1	set	286
   874     011D                     _APFCON0	set	285
   875     010D                     _LATB	set	269
   876     010C                     _LATA	set	268
   877     018C                     _ANSELA	set	396
   878     018D                     _ANSELB	set	397
   879     020C                     _WPUA	set	524
   880     020D                     _WPUB	set	525
   881     029E                     _CCPTMRS0bits	set	670
   882     0312                     _CCPR3H	set	786
   883     0311                     _CCPR3L	set	785
   884     0313                     _CCP3CON	set	787
   885                           
   886                           	psect	cinit
   887     07EF                     start_initialization:	
   888                           ; #config settings
   889                           
   890     07EF                     __initialization:
   891                           
   892                           ; Initialize objects allocated to BANK0
   893     07EF  309D               	movlw	low __pidataBANK0
   894     07F0  0084               	movwf	4
   895     07F1  3086               	movlw	(high __pidataBANK0)| (0+128)
   896     07F2  0085               	movwf	5
   897     07F3  0012               	moviw fsr0++
   898     07F4  00A7               	movwf	__pdataBANK0& (0+127)
   899     07F5  0012               	moviw fsr0++
   900     07F6  00A8               	movwf	(__pdataBANK0+1)& (0+127)
   901     07F7  0012               	moviw fsr0++
   902     07F8  00A9               	movwf	(__pdataBANK0+2)& (0+127)
   903     07F9  0012               	moviw fsr0++
   904     07FA  00AA               	movwf	(__pdataBANK0+3)& (0+127)
   905     07FB  0012               	moviw fsr0++
   906     07FC  00AB               	movwf	(__pdataBANK0+4)& (0+127)
   907     07FD                     end_of_initialization:	
   908                           ;End of C runtime variable initialization code
   909                           
   910     07FD                     __end_of__initialization:
   911     07FD  0020               	movlb	0
   912     07FE  3187  2F7D         	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	dataBANK0
   915     0027                     __pdataBANK0:
   916     0027                     main@F2836:
   917     0027                     	ds	5
   918                           
   919                           	psect	cstackCOMMON
   920     0070                     __pcstackCOMMON:
   921     0070                     ?_OSCILLATOR_Initialize:
   922     0070                     ??_OSCILLATOR_Initialize:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_WDT_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ??_WDT_Initialize:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_initialize:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ??_initialize:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_stop:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_pwm_load_duty_value:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_PIN_MANAGER_Initialize:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ??_PIN_MANAGER_Initialize:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_SYSTEM_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ??_SYSTEM_Initialize:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?_main:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ?_set_input1_pin_low:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ??_set_input1_pin_low:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_set_input1_pin_high:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ??_set_input1_pin_high:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ?_set_input2_pin_low:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ??_set_input2_pin_low:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_set_input2_pin_high:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ??_set_input2_pin_high:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     pwm_load_duty_value@duty_value:	
   983                           ; 1 bytes @ 0x0
   984                           
   985                           
   986                           ; 2 bytes @ 0x0
   987     0070                     	ds	1
   988     0071                     set_input1_pin_low@p:
   989     0071                     set_input1_pin_high@p:	
   990                           ; 1 bytes @ 0x1
   991                           
   992     0071                     set_input2_pin_low@p:	
   993                           ; 1 bytes @ 0x1
   994                           
   995     0071                     set_input2_pin_high@p:	
   996                           ; 1 bytes @ 0x1
   997                           
   998     0071                     initialize@p:	
   999                           ; 1 bytes @ 0x1
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x1
  1003     0071                     	ds	1
  1004     0072                     ??_pwm_load_duty_value:
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007     0072                     	ds	2
  1008     0074                     ?_set_speed:
  1009     0074                     set_speed@speed:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014     0074                     	ds	2
  1015     0076                     ??_set_speed:
  1016     0076                     set_speed@p:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x6
  1021     0076                     	ds	1
  1022     0077                     ?_forward:
  1023     0077                     ?_back:	
  1024                           ; 1 bytes @ 0x7
  1025                           
  1026     0077                     ??_stop:	
  1027                           ; 1 bytes @ 0x7
  1028                           
  1029     0077                     stop@p:	
  1030                           ; 1 bytes @ 0x7
  1031                           
  1032     0077                     forward@value:	
  1033                           ; 1 bytes @ 0x7
  1034                           
  1035     0077                     back@value:	
  1036                           ; 2 bytes @ 0x7
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x7
  1040     0077                     	ds	2
  1041     0079                     ??_forward:
  1042     0079                     ??_back:	
  1043                           ; 1 bytes @ 0x9
  1044                           
  1045     0079                     forward@p:	
  1046                           ; 1 bytes @ 0x9
  1047                           
  1048     0079                     back@p:	
  1049                           ; 1 bytes @ 0x9
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x9
  1053     0079                     	ds	1
  1054     007A                     ??_main:
  1055                           
  1056                           ; 1 bytes @ 0xA
  1057     007A                     	ds	1
  1058                           
  1059                           	psect	cstackBANK0
  1060     0020                     __pcstackBANK0:
  1061     0020                     main@count:
  1062                           
  1063                           ; 2 bytes @ 0x0
  1064     0020                     	ds	2
  1065     0022                     main@ta7291p:
  1066                           
  1067                           ; 5 bytes @ 0x2
  1068     0022                     	ds	5
  1069                           
  1070                           	psect	maintext
  1071     077D                     __pmaintext:	
  1072 ;;
  1073 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1074 ;;
  1075 ;; *************** function _main *****************
  1076 ;; Defined at:
  1077 ;;		line 7 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  ta7291p         5    2[BANK0 ] struct .
  1082 ;;  count           2    0[BANK0 ] unsigned short 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : B1F/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1092 ;;      Params:         0       0       0       0       0       0
  1093 ;;      Locals:         0       7       0       0       0       0
  1094 ;;      Temps:          1       0       0       0       0       0
  1095 ;;      Totals:         1       7       0       0       0       0
  1096 ;;Total ram usage:        8 bytes
  1097 ;; Hardware stack levels required when called: 3
  1098 ;; This function calls:
  1099 ;;		_SYSTEM_Initialize
  1100 ;;		_back
  1101 ;;		_forward
  1102 ;;		_initialize
  1103 ;;		_stop
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109     077D                     _main:	
  1110                           ;psect for function _main
  1111                           
  1112     077D                     l881:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1115                           
  1116                           
  1117                           ;main.c: 10:     SYSTEM_Initialize();
  1118     077D  3186  26A9  3187   	fcall	_SYSTEM_Initialize
  1119     0780                     l883:
  1120                           
  1121                           ;main.c: 16:     TA7291P ta7291p = {0x00, 0x01, 0x08, 0};
  1122     0780  3027               	movlw	low main@F2836
  1123     0781  0086               	movwf	6
  1124     0782  3000               	movlw	high main@F2836
  1125     0783  0087               	movwf	7
  1126     0784  3022               	movlw	low main@ta7291p
  1127     0785  0084               	movwf	4
  1128     0786  3000               	movlw	high main@ta7291p
  1129     0787  0085               	movwf	5
  1130     0788  3005               	movlw	5
  1131     0789  00FA               	movwf	??_main
  1132     078A                     u100:
  1133     078A  0016               	moviw fsr1++
  1134     078B  001A               	movwi fsr0++
  1135     078C  0BFA               	decfsz	??_main,f
  1136     078D  2F8A               	goto	u100
  1137     078E                     l885:
  1138                           
  1139                           ;main.c: 17:     initialize(&ta7291p);
  1140     078E  3022               	movlw	(low (main@ta7291p| 0))& (0+255)
  1141     078F  3187  275B  3187   	fcall	_initialize
  1142     0792                     l887:
  1143                           
  1144                           ;main.c: 22:  CCP3CON = 0x3C;
  1145     0792  303C               	movlw	60
  1146     0793  0026               	movlb	6	; select bank6
  1147     0794  0093               	movwf	19	;volatile
  1148     0795                     l889:
  1149                           
  1150                           ;main.c: 24:  CCPR3L = 0x7F;
  1151     0795  307F               	movlw	127
  1152     0796  0091               	movwf	17	;volatile
  1153     0797                     l891:
  1154                           
  1155                           ;main.c: 26:  CCPR3H = 0x00;
  1156     0797  0192               	clrf	18	;volatile
  1157     0798                     l893:
  1158                           
  1159                           ;main.c: 28:  CCPTMRS0bits.C3TSEL = 0x0;
  1160     0798  30CF               	movlw	-49
  1161     0799  0025               	movlb	5	; select bank5
  1162     079A  059E               	andwf	30,f	;volatile
  1163     079B                     l895:
  1164                           
  1165                           ;main.c: 32:     PR2 = 0xFF;
  1166     079B  30FF               	movlw	255
  1167     079C  0020               	movlb	0	; select bank0
  1168     079D  009B               	movwf	27	;volatile
  1169     079E                     l897:
  1170                           
  1171                           ;main.c: 34:     TMR2 = 0x00;
  1172     079E  019A               	clrf	26	;volatile
  1173     079F                     l899:
  1174                           
  1175                           ;main.c: 36:     PIR1bits.TMR2IF = 0;
  1176     079F  1091               	bcf	17,1	;volatile
  1177     07A0                     l901:
  1178                           
  1179                           ;main.c: 38:     T2CON = 0x04;
  1180     07A0  3004               	movlw	4
  1181     07A1  009C               	movwf	28	;volatile
  1182     07A2                     l903:
  1183                           
  1184                           ;main.c: 40:     uint16_t count = 0;
  1185     07A2  01A0               	clrf	main@count
  1186     07A3  01A1               	clrf	main@count+1
  1187     07A4                     l905:
  1188                           
  1189                           ;main.c: 47:     {;main.c: 48:         if(count == 1023){
  1190     07A4  0A20               	incf	main@count,w
  1191     07A5  3003               	movlw	3
  1192     07A6  1903               	skipnz
  1193     07A7  0621               	xorwf	main@count+1,w
  1194     07A8  1D03               	btfss	3,2
  1195     07A9  2FAB               	goto	u111
  1196     07AA  2FAC               	goto	u110
  1197     07AB                     u111:
  1198     07AB  2FAE               	goto	l909
  1199     07AC                     u110:
  1200     07AC                     l907:
  1201                           
  1202                           ;main.c: 49:             count = 0;
  1203     07AC  01A0               	clrf	main@count
  1204     07AD  01A1               	clrf	main@count+1
  1205     07AE                     l909:
  1206                           
  1207                           ;main.c: 52:         if(count >= 0 && count <= 500){
  1208     07AE  3001               	movlw	1
  1209     07AF  0221               	subwf	main@count+1,w
  1210     07B0  30F5               	movlw	245
  1211     07B1  1903               	skipnz
  1212     07B2  0220               	subwf	main@count,w
  1213     07B3  1803               	skipnc
  1214     07B4  2FB6               	goto	u121
  1215     07B5  2FB7               	goto	u120
  1216     07B6                     u121:
  1217     07B6  2FC0               	goto	l913
  1218     07B7                     u120:
  1219     07B7                     l911:
  1220                           
  1221                           ;main.c: 53:             forward(&ta7291p, count);
  1222     07B7  0821               	movf	main@count+1,w
  1223     07B8  00F8               	movwf	forward@value+1
  1224     07B9  0820               	movf	main@count,w
  1225     07BA  00F7               	movwf	forward@value
  1226     07BB  3022               	movlw	(low (main@ta7291p| 0))& (0+255)
  1227     07BC  3186  26FE  3187   	fcall	_forward
  1228                           
  1229                           ;main.c: 54:         }else if(count >= 501 && count <= 1000){
  1230     07BF  2FDF               	goto	l921
  1231     07C0                     l913:
  1232     07C0  3001               	movlw	1
  1233     07C1  0221               	subwf	main@count+1,w
  1234     07C2  30F5               	movlw	245
  1235     07C3  1903               	skipnz
  1236     07C4  0220               	subwf	main@count,w
  1237     07C5  1C03               	skipc
  1238     07C6  2FC8               	goto	u131
  1239     07C7  2FC9               	goto	u130
  1240     07C8                     u131:
  1241     07C8  2FDB               	goto	l919
  1242     07C9                     u130:
  1243     07C9                     l915:
  1244     07C9  3003               	movlw	3
  1245     07CA  0221               	subwf	main@count+1,w
  1246     07CB  30E9               	movlw	233
  1247     07CC  1903               	skipnz
  1248     07CD  0220               	subwf	main@count,w
  1249     07CE  1803               	skipnc
  1250     07CF  2FD1               	goto	u141
  1251     07D0  2FD2               	goto	u140
  1252     07D1                     u141:
  1253     07D1  2FDB               	goto	l919
  1254     07D2                     u140:
  1255     07D2                     l917:
  1256                           
  1257                           ;main.c: 55:             back(&ta7291p, count);
  1258     07D2  0821               	movf	main@count+1,w
  1259     07D3  00F8               	movwf	back@value+1
  1260     07D4  0820               	movf	main@count,w
  1261     07D5  00F7               	movwf	back@value
  1262     07D6  3022               	movlw	(low (main@ta7291p| 0))& (0+255)
  1263     07D7  3186  26EC  3187   	fcall	_back
  1264                           
  1265                           ;main.c: 56:         }else{
  1266     07DA  2FDF               	goto	l921
  1267     07DB                     l919:
  1268                           
  1269                           ;main.c: 57:             stop(&ta7291p);
  1270     07DB  3022               	movlw	(low (main@ta7291p| 0))& (0+255)
  1271     07DC  3186  26DB  3187   	fcall	_stop
  1272     07DF                     l921:
  1273                           
  1274                           ;main.c: 60:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1275     07DF  301A               	movlw	26
  1276     07E0  00FA               	movwf	??_main
  1277     07E1  30F8               	movlw	248
  1278     07E2                     u157:
  1279     07E2  0B89               	decfsz	9,f
  1280     07E3  2FE2               	goto	u157
  1281     07E4  0BFA               	decfsz	??_main,f
  1282     07E5  2FE2               	goto	u157
  1283     07E6  3200               	nop2
  1284     07E7                     l923:
  1285                           
  1286                           ;main.c: 62:         count++;
  1287     07E7  3001               	movlw	1
  1288     07E8  0020               	movlb	0	; select bank0
  1289     07E9  07A0               	addwf	main@count,f
  1290     07EA  3000               	movlw	0
  1291     07EB  3DA1               	addwfc	main@count+1,f
  1292     07EC  2FA4               	goto	l905
  1293     07ED  3180  2802         	ljmp	start
  1294     07EF                     __end_of_main:
  1295                           
  1296                           	psect	text1
  1297     06DB                     __ptext1:	
  1298 ;; *************** function _stop *****************
  1299 ;; Defined at:
  1300 ;;		line 62 in file "ta7291p.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  p               1    wreg     PTR struct .
  1303 ;;		 -> main@ta7291p(5), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  p               1    7[COMMON] PTR struct .
  1306 ;;		 -> main@ta7291p(5), 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1316 ;;      Params:         0       0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0
  1319 ;;      Totals:         1       0       0       0       0       0
  1320 ;;Total ram usage:        1 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 2
  1323 ;; This function calls:
  1324 ;;		_set_input1_pin_low
  1325 ;;		_set_input2_pin_low
  1326 ;;		_set_speed
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332     06DB                     _stop:	
  1333                           ;psect for function _stop
  1334                           
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1338                           ;stop@p stored from wreg
  1339     06DB  00F7               	movwf	stop@p
  1340     06DC                     l879:
  1341                           
  1342                           ;ta7291p.c: 63:     set_input1_pin_low(p);
  1343     06DC  0877               	movf	stop@p,w
  1344     06DD  3186  26B3  3186   	fcall	_set_input1_pin_low
  1345                           
  1346                           ;ta7291p.c: 64:     set_input2_pin_low(p);
  1347     06E0  0877               	movf	stop@p,w
  1348     06E1  3186  26D1  3186   	fcall	_set_input2_pin_low
  1349                           
  1350                           ;ta7291p.c: 66:     set_speed(p, 0);
  1351     06E4  3000               	movlw	0
  1352     06E5  00F4               	movwf	set_speed@speed
  1353     06E6  00F5               	movwf	set_speed@speed+1
  1354     06E7  0877               	movf	stop@p,w
  1355     06E8  3187  273D  3186   	fcall	_set_speed
  1356     06EB                     l131:
  1357     06EB  0008               	return
  1358     06EC                     __end_of_stop:
  1359                           
  1360                           	psect	text2
  1361     075B                     __ptext2:	
  1362 ;; *************** function _initialize *****************
  1363 ;; Defined at:
  1364 ;;		line 21 in file "ta7291p.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  p               1    wreg     PTR struct .
  1367 ;;		 -> main@ta7291p(5), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  p               1    1[COMMON] PTR struct .
  1370 ;;		 -> main@ta7291p(5), 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1380 ;;      Params:         0       0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393     075B                     _initialize:	
  1394                           ;psect for function _initialize
  1395                           
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in _initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  1399                           ;initialize@p stored from wreg
  1400     075B  00F1               	movwf	initialize@p
  1401     075C                     l873:
  1402                           
  1403                           ;ta7291p.c: 26:     TRISA &= ~p->input1_pin;
  1404     075C  0871               	movf	initialize@p,w
  1405     075D  0086               	movwf	6
  1406     075E  0187               	clrf	7
  1407     075F  0901               	comf	1,w
  1408     0760  00F0               	movwf	??_initialize
  1409     0761  0870               	movf	??_initialize,w
  1410     0762  0021               	movlb	1	; select bank1
  1411     0763  058C               	andwf	12,f	;volatile
  1412                           
  1413                           ;ta7291p.c: 27:     TRISA &= ~p->input2_pin;
  1414     0764  0A71               	incf	initialize@p,w
  1415     0765  0086               	movwf	6
  1416     0766  0187               	clrf	7
  1417     0767  0901               	comf	1,w
  1418     0768  00F0               	movwf	??_initialize
  1419     0769  0870               	movf	??_initialize,w
  1420     076A  058C               	andwf	12,f	;volatile
  1421                           
  1422                           ;ta7291p.c: 28:     TRISA &= ~p->vref_pin;
  1423     076B  0871               	movf	initialize@p,w
  1424     076C  3E02               	addlw	2
  1425     076D  0086               	movwf	6
  1426     076E  0187               	clrf	7
  1427     076F  0901               	comf	1,w
  1428     0770  00F0               	movwf	??_initialize
  1429     0771  0870               	movf	??_initialize,w
  1430     0772  058C               	andwf	12,f	;volatile
  1431                           
  1432                           ;ta7291p.c: 31:     ANSELA |= p->vref_pin;
  1433     0773  0871               	movf	initialize@p,w
  1434     0774  3E02               	addlw	2
  1435     0775  0086               	movwf	6
  1436     0776  0187               	clrf	7
  1437     0777  0801               	movf	1,w
  1438     0778  00F0               	movwf	??_initialize
  1439     0779  0870               	movf	??_initialize,w
  1440     077A  0023               	movlb	3	; select bank3
  1441     077B  048C               	iorwf	12,f	;volatile
  1442     077C                     l121:
  1443     077C  0008               	return
  1444     077D                     __end_of_initialize:
  1445                           
  1446                           	psect	text3
  1447     06FE                     __ptext3:	
  1448 ;; *************** function _forward *****************
  1449 ;; Defined at:
  1450 ;;		line 74 in file "ta7291p.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  p               1    wreg     PTR struct .
  1453 ;;		 -> main@ta7291p(5), 
  1454 ;;  value           2    7[COMMON] unsigned short 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  p               1    9[COMMON] PTR struct .
  1457 ;;		 -> main@ta7291p(5), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1467 ;;      Params:         2       0       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0
  1470 ;;      Totals:         3       0       0       0       0       0
  1471 ;;Total ram usage:        3 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 2
  1474 ;; This function calls:
  1475 ;;		_set_input1_pin_high
  1476 ;;		_set_input2_pin_low
  1477 ;;		_set_speed
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483     06FE                     _forward:	
  1484                           ;psect for function _forward
  1485                           
  1486                           
  1487                           ;incstack = 0
  1488                           ; Regs used in _forward: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1489                           ;forward@p stored from wreg
  1490     06FE  00F9               	movwf	forward@p
  1491     06FF                     l875:
  1492                           
  1493                           ;ta7291p.c: 75:     set_input1_pin_high(p);
  1494     06FF  0879               	movf	forward@p,w
  1495     0700  3186  26C7  3186   	fcall	_set_input1_pin_high
  1496                           
  1497                           ;ta7291p.c: 76:     set_input2_pin_low(p);
  1498     0703  0879               	movf	forward@p,w
  1499     0704  3186  26D1  3186   	fcall	_set_input2_pin_low
  1500                           
  1501                           ;ta7291p.c: 78:     set_speed(p, value);
  1502     0707  0878               	movf	forward@value+1,w
  1503     0708  00F5               	movwf	set_speed@speed+1
  1504     0709  0877               	movf	forward@value,w
  1505     070A  00F4               	movwf	set_speed@speed
  1506     070B  0879               	movf	forward@p,w
  1507     070C  3187  273D  3186   	fcall	_set_speed
  1508     070F                     l134:
  1509     070F  0008               	return
  1510     0710                     __end_of_forward:
  1511                           
  1512                           	psect	text4
  1513     06D1                     __ptext4:	
  1514 ;; *************** function _set_input2_pin_low *****************
  1515 ;; Defined at:
  1516 ;;		line 10 in file "ta7291p.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  p               1    wreg     PTR struct .
  1519 ;;		 -> main@ta7291p(5), 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  p               1    1[COMMON] PTR struct .
  1522 ;;		 -> main@ta7291p(5), 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1532 ;;      Params:         0       0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0
  1534 ;;      Temps:          1       0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_stop
  1542 ;;		_forward
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546     06D1                     _set_input2_pin_low:	
  1547                           ;psect for function _set_input2_pin_low
  1548                           
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _set_input2_pin_low: [wreg+fsr1l+fsr1h+status,2+status,0]
  1552                           ;set_input2_pin_low@p stored from wreg
  1553     06D1  00F1               	movwf	set_input2_pin_low@p
  1554     06D2                     l861:
  1555                           
  1556                           ;ta7291p.c: 11:     LATA &= ~p->input1_pin;
  1557     06D2  0871               	movf	set_input2_pin_low@p,w
  1558     06D3  0086               	movwf	6
  1559     06D4  0187               	clrf	7
  1560     06D5  0901               	comf	1,w
  1561     06D6  00F0               	movwf	??_set_input2_pin_low
  1562     06D7  0870               	movf	??_set_input2_pin_low,w
  1563     06D8  0022               	movlb	2	; select bank2
  1564     06D9  058C               	andwf	12,f	;volatile
  1565     06DA                     l115:
  1566     06DA  0008               	return
  1567     06DB                     __end_of_set_input2_pin_low:
  1568                           
  1569                           	psect	text5
  1570     06C7                     __ptext5:	
  1571 ;; *************** function _set_input1_pin_high *****************
  1572 ;; Defined at:
  1573 ;;		line 6 in file "ta7291p.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  p               1    wreg     PTR struct .
  1576 ;;		 -> main@ta7291p(5), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  p               1    1[COMMON] PTR struct .
  1579 ;;		 -> main@ta7291p(5), 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1589 ;;      Params:         0       0       0       0       0       0
  1590 ;;      Locals:         1       0       0       0       0       0
  1591 ;;      Temps:          1       0       0       0       0       0
  1592 ;;      Totals:         2       0       0       0       0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_forward
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602     06C7                     _set_input1_pin_high:	
  1603                           ;psect for function _set_input1_pin_high
  1604                           
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _set_input1_pin_high: [wreg+fsr1l+fsr1h+status,2+status,0]
  1608                           ;set_input1_pin_high@p stored from wreg
  1609     06C7  00F1               	movwf	set_input1_pin_high@p
  1610     06C8                     l859:
  1611                           
  1612                           ;ta7291p.c: 7:     LATA |= p->input1_pin;
  1613     06C8  0871               	movf	set_input1_pin_high@p,w
  1614     06C9  0086               	movwf	6
  1615     06CA  0187               	clrf	7
  1616     06CB  0801               	movf	1,w
  1617     06CC  00F0               	movwf	??_set_input1_pin_high
  1618     06CD  0870               	movf	??_set_input1_pin_high,w
  1619     06CE  0022               	movlb	2	; select bank2
  1620     06CF  048C               	iorwf	12,f	;volatile
  1621     06D0                     l112:
  1622     06D0  0008               	return
  1623     06D1                     __end_of_set_input1_pin_high:
  1624                           
  1625                           	psect	text6
  1626     06EC                     __ptext6:	
  1627 ;; *************** function _back *****************
  1628 ;; Defined at:
  1629 ;;		line 86 in file "ta7291p.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  p               1    wreg     PTR struct .
  1632 ;;		 -> main@ta7291p(5), 
  1633 ;;  value           2    7[COMMON] unsigned short 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  p               1    9[COMMON] PTR struct .
  1636 ;;		 -> main@ta7291p(5), 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1646 ;;      Params:         2       0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0
  1649 ;;      Totals:         3       0       0       0       0       0
  1650 ;;Total ram usage:        3 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 2
  1653 ;; This function calls:
  1654 ;;		_set_input1_pin_low
  1655 ;;		_set_input2_pin_high
  1656 ;;		_set_speed
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     06EC                     _back:	
  1663                           ;psect for function _back
  1664                           
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _back: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1668                           ;back@p stored from wreg
  1669     06EC  00F9               	movwf	back@p
  1670     06ED                     l877:
  1671                           
  1672                           ;ta7291p.c: 87:     set_input1_pin_low(p);
  1673     06ED  0879               	movf	back@p,w
  1674     06EE  3186  26B3  3186   	fcall	_set_input1_pin_low
  1675                           
  1676                           ;ta7291p.c: 88:     set_input2_pin_high(p);
  1677     06F1  0879               	movf	back@p,w
  1678     06F2  3186  26BD  3186   	fcall	_set_input2_pin_high
  1679                           
  1680                           ;ta7291p.c: 90:     set_speed(p, value);
  1681     06F5  0878               	movf	back@value+1,w
  1682     06F6  00F5               	movwf	set_speed@speed+1
  1683     06F7  0877               	movf	back@value,w
  1684     06F8  00F4               	movwf	set_speed@speed
  1685     06F9  0879               	movf	back@p,w
  1686     06FA  3187  273D  3186   	fcall	_set_speed
  1687     06FD                     l137:
  1688     06FD  0008               	return
  1689     06FE                     __end_of_back:
  1690                           
  1691                           	psect	text7
  1692     073D                     __ptext7:	
  1693 ;; *************** function _set_speed *****************
  1694 ;; Defined at:
  1695 ;;		line 39 in file "ta7291p.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  p               1    wreg     PTR struct .
  1698 ;;		 -> main@ta7291p(5), 
  1699 ;;  speed           2    4[COMMON] unsigned short 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  p               1    6[COMMON] PTR struct .
  1702 ;;		 -> main@ta7291p(5), 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1712 ;;      Params:         2       0       0       0       0       0
  1713 ;;      Locals:         1       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0
  1715 ;;      Totals:         3       0       0       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 1
  1719 ;; This function calls:
  1720 ;;		_pwm_load_duty_value
  1721 ;; This function is called by:
  1722 ;;		_stop
  1723 ;;		_forward
  1724 ;;		_back
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728     073D                     _set_speed:	
  1729                           ;psect for function _set_speed
  1730                           
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _set_speed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1734                           ;set_speed@p stored from wreg
  1735     073D  00F6               	movwf	set_speed@p
  1736     073E                     l865:
  1737                           
  1738                           ;ta7291p.c: 40:     if(speed >= 0 && speed <= 1023){
  1739     073E  3004               	movlw	4
  1740     073F  0275               	subwf	set_speed@speed+1,w
  1741     0740  3000               	movlw	0
  1742     0741  1903               	skipnz
  1743     0742  0274               	subwf	set_speed@speed,w
  1744     0743  1803               	skipnc
  1745     0744  2F46               	goto	u91
  1746     0745  2F47               	goto	u90
  1747     0746                     u91:
  1748     0746  2F5A               	goto	l125
  1749     0747                     u90:
  1750     0747                     l867:
  1751                           
  1752                           ;ta7291p.c: 41:         p->speed = speed;
  1753     0747  0876               	movf	set_speed@p,w
  1754     0748  3E03               	addlw	3
  1755     0749  0086               	movwf	6
  1756     074A  0187               	clrf	7
  1757     074B  0874               	movf	set_speed@speed,w
  1758     074C  3FC0               	movwi [0]fsr1
  1759     074D  0875               	movf	set_speed@speed+1,w
  1760     074E  3FC1               	movwi [1]fsr1
  1761     074F                     l869:
  1762                           
  1763                           ;ta7291p.c: 42:         pwm_load_duty_value(p->speed);
  1764     074F  0876               	movf	set_speed@p,w
  1765     0750  3E03               	addlw	3
  1766     0751  0086               	movwf	6
  1767     0752  0187               	clrf	7
  1768     0753  3F40               	moviw [0]fsr1
  1769     0754  00F0               	movwf	pwm_load_duty_value@duty_value
  1770     0755  3F41               	moviw [1]fsr1
  1771     0756  00F1               	movwf	pwm_load_duty_value@duty_value+1
  1772     0757  3187  2726  3187   	fcall	_pwm_load_duty_value
  1773     075A                     l125:
  1774     075A  0008               	return
  1775     075B                     __end_of_set_speed:
  1776                           
  1777                           	psect	text8
  1778     0726                     __ptext8:	
  1779 ;; *************** function _pwm_load_duty_value *****************
  1780 ;; Defined at:
  1781 ;;		line 50 in file "ta7291p.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  duty_value      2    0[COMMON] unsigned short 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1795 ;;      Params:         2       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0
  1798 ;;      Totals:         4       0       0       0       0       0
  1799 ;;Total ram usage:        4 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_set_speed
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808     0726                     _pwm_load_duty_value:	
  1809                           ;psect for function _pwm_load_duty_value
  1810                           
  1811     0726                     l835:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _pwm_load_duty_value: [wreg+status,2+status,0]
  1814                           
  1815                           
  1816                           ;ta7291p.c: 52:     CCPR3L = ((duty_value & 0x03FC)>>2);
  1817     0726  0871               	movf	pwm_load_duty_value@duty_value+1,w
  1818     0727  00F3               	movwf	??_pwm_load_duty_value+1
  1819     0728  0870               	movf	pwm_load_duty_value@duty_value,w
  1820     0729  00F2               	movwf	??_pwm_load_duty_value
  1821     072A  36F3               	lsrf	??_pwm_load_duty_value+1,f
  1822     072B  0CF2               	rrf	??_pwm_load_duty_value,f
  1823     072C  36F3               	lsrf	??_pwm_load_duty_value+1,f
  1824     072D  0CF2               	rrf	??_pwm_load_duty_value,f
  1825     072E  0872               	movf	??_pwm_load_duty_value,w
  1826     072F  0026               	movlb	6	; select bank6
  1827     0730  0091               	movwf	17	;volatile
  1828                           
  1829                           ;ta7291p.c: 55:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((duty_value & 0x0003)<<4));
  1830     0731  0870               	movf	pwm_load_duty_value@duty_value,w
  1831     0732  3903               	andlw	3
  1832     0733  00F2               	movwf	??_pwm_load_duty_value
  1833     0734  3004               	movlw	4
  1834     0735                     u85:
  1835     0735  35F2               	lslf	??_pwm_load_duty_value,f
  1836     0736  0B89               	decfsz	9,f
  1837     0737  2F35               	goto	u85
  1838     0738  0813               	movf	19,w	;volatile
  1839     0739  39CF               	andlw	207
  1840     073A  0472               	iorwf	??_pwm_load_duty_value,w
  1841     073B  0093               	movwf	19	;volatile
  1842     073C                     l128:
  1843     073C  0008               	return
  1844     073D                     __end_of_pwm_load_duty_value:
  1845                           
  1846                           	psect	text9
  1847     06BD                     __ptext9:	
  1848 ;; *************** function _set_input2_pin_high *****************
  1849 ;; Defined at:
  1850 ;;		line 13 in file "ta7291p.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  p               1    wreg     PTR struct .
  1853 ;;		 -> main@ta7291p(5), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  p               1    1[COMMON] PTR struct .
  1856 ;;		 -> main@ta7291p(5), 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1866 ;;      Params:         0       0       0       0       0       0
  1867 ;;      Locals:         1       0       0       0       0       0
  1868 ;;      Temps:          1       0       0       0       0       0
  1869 ;;      Totals:         2       0       0       0       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_back
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879     06BD                     _set_input2_pin_high:	
  1880                           ;psect for function _set_input2_pin_high
  1881                           
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in _set_input2_pin_high: [wreg+fsr1l+fsr1h+status,2+status,0]
  1885                           ;set_input2_pin_high@p stored from wreg
  1886     06BD  00F1               	movwf	set_input2_pin_high@p
  1887     06BE                     l863:
  1888                           
  1889                           ;ta7291p.c: 14:     LATA |= p->input2_pin;
  1890     06BE  0A71               	incf	set_input2_pin_high@p,w
  1891     06BF  0086               	movwf	6
  1892     06C0  0187               	clrf	7
  1893     06C1  0801               	movf	1,w
  1894     06C2  00F0               	movwf	??_set_input2_pin_high
  1895     06C3  0870               	movf	??_set_input2_pin_high,w
  1896     06C4  0022               	movlb	2	; select bank2
  1897     06C5  048C               	iorwf	12,f	;volatile
  1898     06C6                     l118:
  1899     06C6  0008               	return
  1900     06C7                     __end_of_set_input2_pin_high:
  1901                           
  1902                           	psect	text10
  1903     06B3                     __ptext10:	
  1904 ;; *************** function _set_input1_pin_low *****************
  1905 ;; Defined at:
  1906 ;;		line 3 in file "ta7291p.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  p               1    wreg     PTR struct .
  1909 ;;		 -> main@ta7291p(5), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  p               1    1[COMMON] PTR struct .
  1912 ;;		 -> main@ta7291p(5), 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1922 ;;      Params:         0       0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0       0
  1924 ;;      Temps:          1       0       0       0       0       0
  1925 ;;      Totals:         2       0       0       0       0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_stop
  1932 ;;		_back
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936     06B3                     _set_input1_pin_low:	
  1937                           ;psect for function _set_input1_pin_low
  1938                           
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _set_input1_pin_low: [wreg+fsr1l+fsr1h+status,2+status,0]
  1942                           ;set_input1_pin_low@p stored from wreg
  1943     06B3  00F1               	movwf	set_input1_pin_low@p
  1944     06B4                     l857:
  1945                           
  1946                           ;ta7291p.c: 4:     LATA &= ~p->input1_pin;
  1947     06B4  0871               	movf	set_input1_pin_low@p,w
  1948     06B5  0086               	movwf	6
  1949     06B6  0187               	clrf	7
  1950     06B7  0901               	comf	1,w
  1951     06B8  00F0               	movwf	??_set_input1_pin_low
  1952     06B9  0870               	movf	??_set_input1_pin_low,w
  1953     06BA  0022               	movlb	2	; select bank2
  1954     06BB  058C               	andwf	12,f	;volatile
  1955     06BC                     l109:
  1956     06BC  0008               	return
  1957     06BD                     __end_of_set_input1_pin_low:
  1958                           
  1959                           	psect	text11
  1960     06A9                     __ptext11:	
  1961 ;; *************** function _SYSTEM_Initialize *****************
  1962 ;; Defined at:
  1963 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0, pclath, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1977 ;;      Params:         0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 1
  1984 ;; This function calls:
  1985 ;;		_OSCILLATOR_Initialize
  1986 ;;		_PIN_MANAGER_Initialize
  1987 ;;		_WDT_Initialize
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     06A9                     _SYSTEM_Initialize:	
  1994                           ;psect for function _SYSTEM_Initialize
  1995                           
  1996     06A9                     l871:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1999                           
  2000                           
  2001                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2002     06A9  3187  2710  3186   	fcall	_PIN_MANAGER_Initialize
  2003                           
  2004                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2005     06AC  3186  26A2  3186   	fcall	_OSCILLATOR_Initialize
  2006                           
  2007                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2008     06AF  3186  2699  3186   	fcall	_WDT_Initialize
  2009     06B2                     l45:
  2010     06B2  0008               	return
  2011     06B3                     __end_of_SYSTEM_Initialize:
  2012                           
  2013                           	psect	text12
  2014     0699                     __ptext12:	
  2015 ;; *************** function _WDT_Initialize *****************
  2016 ;; Defined at:
  2017 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2031 ;;      Params:         0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_SYSTEM_Initialize
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044     0699                     _WDT_Initialize:	
  2045                           ;psect for function _WDT_Initialize
  2046                           
  2047     0699                     l855:	
  2048                           ;incstack = 0
  2049                           ; Regs used in _WDT_Initialize: [wreg]
  2050                           
  2051                           
  2052                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2053     0699  3016               	movlw	22
  2054     069A  0021               	movlb	1	; select bank1
  2055     069B  0097               	movwf	23	;volatile
  2056     069C                     l51:
  2057     069C  0008               	return
  2058     069D                     __end_of_WDT_Initialize:
  2059                           
  2060                           	psect	text13
  2061     0710                     __ptext13:	
  2062 ;; *************** function _PIN_MANAGER_Initialize *****************
  2063 ;; Defined at:
  2064 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2078 ;;      Params:         0       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_SYSTEM_Initialize
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     0710                     _PIN_MANAGER_Initialize:	
  2092                           ;psect for function _PIN_MANAGER_Initialize
  2093                           
  2094     0710                     l837:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2097                           
  2098                           
  2099                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2100     0710  0022               	movlb	2	; select bank2
  2101     0711  018C               	clrf	12	;volatile
  2102                           
  2103                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2104     0712  018D               	clrf	13	;volatile
  2105     0713                     l839:
  2106                           
  2107                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2108     0713  30FF               	movlw	255
  2109     0714  0021               	movlb	1	; select bank1
  2110     0715  008C               	movwf	12	;volatile
  2111     0716                     l841:
  2112                           
  2113                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2114     0716  30FF               	movlw	255
  2115     0717  008D               	movwf	13	;volatile
  2116     0718                     l843:
  2117                           
  2118                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2119     0718  30FE               	movlw	254
  2120     0719  0023               	movlb	3	; select bank3
  2121     071A  008D               	movwf	13	;volatile
  2122     071B                     l845:
  2123                           
  2124                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2125     071B  301F               	movlw	31
  2126     071C  008C               	movwf	12	;volatile
  2127                           
  2128                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2129     071D  0024               	movlb	4	; select bank4
  2130     071E  018D               	clrf	13	;volatile
  2131                           
  2132                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2133     071F  018C               	clrf	12	;volatile
  2134     0720                     l847:
  2135                           
  2136                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2137     0720  0021               	movlb	1	; select bank1
  2138     0721  1795               	bsf	21,7	;volatile
  2139                           
  2140                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2141     0722  0022               	movlb	2	; select bank2
  2142     0723  019D               	clrf	29	;volatile
  2143                           
  2144                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2145     0724  019E               	clrf	30	;volatile
  2146     0725                     l25:
  2147     0725  0008               	return
  2148     0726                     __end_of_PIN_MANAGER_Initialize:
  2149                           
  2150                           	psect	text14
  2151     06A2                     __ptext14:	
  2152 ;; *************** function _OSCILLATOR_Initialize *****************
  2153 ;; Defined at:
  2154 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2168 ;;      Params:         0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_SYSTEM_Initialize
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181     06A2                     _OSCILLATOR_Initialize:	
  2182                           ;psect for function _OSCILLATOR_Initialize
  2183                           
  2184     06A2                     l849:	
  2185                           ;incstack = 0
  2186                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2187                           
  2188                           
  2189                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x72;
  2190     06A2  3072               	movlw	114
  2191     06A3  0021               	movlb	1	; select bank1
  2192     06A4  0099               	movwf	25	;volatile
  2193     06A5                     l851:
  2194                           
  2195                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2196     06A5  0198               	clrf	24	;volatile
  2197     06A6                     l853:
  2198                           
  2199                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2200     06A6  0022               	movlb	2	; select bank2
  2201     06A7  0196               	clrf	22	;volatile
  2202     06A8                     l48:
  2203     06A8  0008               	return
  2204     06A9                     __end_of_OSCILLATOR_Initialize:
  2205     007E                     btemp	set	126	;btemp
  2206     007E                     wtemp0	set	126
  2207                           
  2208                           	psect	idloc
  2209                           
  2210                           ;Config register IDLOC0 @ 0x8000
  2211                           ;	unspecified, using default values
  2212     8000                     	org	32768
  2213     8000  3FFF               	dw	16383
  2214                           
  2215                           ;Config register IDLOC1 @ 0x8001
  2216                           ;	unspecified, using default values
  2217     8001                     	org	32769
  2218     8001  3FFF               	dw	16383
  2219                           
  2220                           ;Config register IDLOC2 @ 0x8002
  2221                           ;	unspecified, using default values
  2222     8002                     	org	32770
  2223     8002  3FFF               	dw	16383
  2224                           
  2225                           ;Config register IDLOC3 @ 0x8003
  2226                           ;	unspecified, using default values
  2227     8003                     	org	32771
  2228     8003  3FFF               	dw	16383
  2229                           
  2230                           	psect	config
  2231                           
  2232                           ;Config register CONFIG1 @ 0x8007
  2233                           ;	Oscillator Selection
  2234                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2235                           ;	Watchdog Timer Enable
  2236                           ;	WDTE = OFF, WDT disabled
  2237                           ;	Power-up Timer Enable
  2238                           ;	PWRTE = OFF, PWRT disabled
  2239                           ;	MCLR Pin Function Select
  2240                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2241                           ;	Flash Program Memory Code Protection
  2242                           ;	CP = OFF, Program memory code protection is disabled
  2243                           ;	Data Memory Code Protection
  2244                           ;	CPD = OFF, Data memory code protection is disabled
  2245                           ;	Brown-out Reset Enable
  2246                           ;	BOREN = ON, Brown-out Reset enabled
  2247                           ;	Clock Out Enable
  2248                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2249                           ;	Internal/External Switchover
  2250                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2251                           ;	Fail-Safe Clock Monitor Enable
  2252                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2253     8007                     	org	32775
  2254     8007  3FE4               	dw	16356
  2255                           
  2256                           ;Config register CONFIG2 @ 0x8008
  2257                           ;	Flash Memory Self-Write Protection
  2258                           ;	WRT = OFF, Write protection off
  2259                           ;	PLL Enable
  2260                           ;	PLLEN = OFF, 4x PLL disabled
  2261                           ;	Stack Overflow/Underflow Reset Enable
  2262                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2263                           ;	Brown-out Reset Voltage Selection
  2264                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2265                           ;	In-Circuit Debugger Mode
  2266                           ;	DEBUG = 0x1, unprogrammed default
  2267                           ;	Low-Voltage Programming Enable
  2268                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2269     8008                     	org	32776
  2270     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      7      12
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    back@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    forward@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    stop@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_speed@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    initialize@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input2_pin_high@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input2_pin_low@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input1_pin_high@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input1_pin_low@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_back
    _main->_forward
    _stop->_set_speed
    _forward->_set_speed
    _back->_set_speed
    _set_speed->_pwm_load_duty_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2916
                                             10 COMMON     1     1      0
                                              0 BANK0      7     7      0
                  _SYSTEM_Initialize
                               _back
                            _forward
                         _initialize
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 1     1      0     810
                                              7 COMMON     1     1      0
                 _set_input1_pin_low
                 _set_input2_pin_low
                          _set_speed
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forward                                              3     1      2     875
                                              7 COMMON     3     1      2
                _set_input1_pin_high
                 _set_input2_pin_low
                          _set_speed
 ---------------------------------------------------------------------------------
 (2) _set_input2_pin_low                                   2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_input1_pin_high                                  2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _back                                                 3     1      2     875
                                              7 COMMON     3     1      2
                 _set_input1_pin_low
                _set_input2_pin_high
                          _set_speed
 ---------------------------------------------------------------------------------
 (2) _set_speed                                            3     1      2     535
                                              4 COMMON     3     1      2
                _pwm_load_duty_value
 ---------------------------------------------------------------------------------
 (3) _pwm_load_duty_value                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _set_input2_pin_high                                  2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_input1_pin_low                                   2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _back
     _set_input1_pin_low
     _set_input2_pin_high
     _set_speed
       _pwm_load_duty_value
   _forward
     _set_input1_pin_high
     _set_input2_pin_low
     _set_speed
   _initialize
   _stop
     _set_input1_pin_low
     _set_input2_pin_low
     _set_speed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7       C       6       15.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      17      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May  9 22:49:26 2023

                            l25 0725                              l51 069C                              l45 06B2  
                            l48 06A8                              u90 0747                              u91 0746  
                            u85 0735                             l112 06D0                             l121 077C  
                           l115 06DA                             l131 06EB                             l109 06BC  
                           l125 075A                             l118 06C6                             l134 070F  
                           l128 073C                             l137 06FD                             l901 07A0  
                           l911 07B7                             l903 07A2                             l841 0716  
                           l921 07DF                             l913 07C0                             l905 07A4  
                           l851 06A5                             l843 0718                             l835 0726  
                           l923 07E7                             l915 07C9                             l907 07AC  
                           l853 06A6                             l845 071B                             l837 0710  
                           l861 06D2                             l917 07D2                             l909 07AE  
                           l847 0720                             l839 0713                             l855 0699  
                           l871 06A9                             l863 06BE                             l919 07DB  
                           l849 06A2                             l857 06B4                             l865 073E  
                           l873 075C                             l881 077D                             l867 0747  
                           l859 06C8                             l875 06FF                             l891 0797  
                           l883 0780                             l869 074F                             l877 06ED  
                           l893 0798                             l885 078E                             l879 06DC  
                           l895 079B                             l887 0792                             l897 079E  
                           l889 0795                             l899 079F                             u100 078A  
                           u110 07AC                             u111 07AB                             u120 07B7  
                           u121 07B6                             u130 07C9                             u131 07C8  
                           u140 07D2                             u141 07D1                             u157 07E2  
                           _PR2 001B                     main@ta7291p 0022                             wreg 0009  
                          _LATA 010C                            _LATB 010D                            _TMR2 001A  
                          _WPUA 020C                            _WPUB 020D                            _back 06EC  
                          _main 077D                            fsr0h 0005                            fsr1h 0007  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          btemp 007E                            _stop 06DB                            start 0002  
 __end_of_OSCILLATOR_Initialize 06A9                           ?_back 0077                           ?_main 0070  
                         ?_stop 0070                           _T2CON 001C                           _TRISA 008C  
                         _TRISB 008D                           back@p 0079                  _WDT_Initialize 0699  
               __end_of_forward 0710                           stop@p 0077                           status 0003  
                         wtemp0 007E                 __initialization 07EF                    __end_of_back 06FE  
                  __end_of_main 07EF                    __end_of_stop 06EC                          ??_back 0079  
                        ??_main 007A                          ??_stop 0077          __end_of_WDT_Initialize 069D  
                        _CCPR3H 0312                          _CCPR3L 0311     __end_of_pwm_load_duty_value 073D  
                        _ANSELA 018C                          _ANSELB 018D                          _BORCON 0116  
                        _OSCCON 0099                          _WDTCON 0097                    _CCPTMRS0bits 029E  
 pwm_load_duty_value@duty_value 0070     __end_of_set_input1_pin_high 06D1     __end_of_set_input2_pin_high 06C7  
                     ??_forward 0079                 ?_WDT_Initialize 0070                     initialize@p 0071  
             _SYSTEM_Initialize 06A9         __end_of__initialization 07FD              ?_SYSTEM_Initialize 0070  
                __pcstackCOMMON 0070                    __pidataBANK0 069D             ??_SYSTEM_Initialize 0070  
                _OPTION_REGbits 0095       __end_of_SYSTEM_Initialize 06B3                      __pmaintext 077D  
                       _CCP3CON 0313                         _APFCON0 011D                         _APFCON1 011E  
                       _OSCTUNE 0098                      _initialize 075B                         __ptext1 06DB  
                       __ptext2 075B                         __ptext3 06FE                         __ptext4 06D1  
                       __ptext5 06C7                         __ptext6 06EC                         __ptext7 073D  
                       __ptext8 0726                         __ptext9 06BD           _OSCILLATOR_Initialize 06A2  
                       _forward 06FE        ??_PIN_MANAGER_Initialize 0070            end_of_initialization 07FD  
                  forward@value 0077               __end_of_set_speed 075B                ??_WDT_Initialize 0070  
                   ?_initialize 0070          ?_OSCILLATOR_Initialize 0070             start_initialization 07EF  
    __end_of_set_input1_pin_low 06BD      __end_of_set_input2_pin_low 06DB                     __pdataBANK0 0027  
                set_speed@speed 0074                       ___latbits 0001                   __pcstackBANK0 0020  
                     back@value 0077          _PIN_MANAGER_Initialize 0710                        ?_forward 0077  
                    set_speed@p 0076                        _PIR1bits 0011                       _set_speed 073D  
                     main@F2836 0027            set_input1_pin_high@p 0071             _pwm_load_duty_value 0726  
                     main@count 0020            set_input2_pin_high@p 0071            ?_pwm_load_duty_value 0070  
           _set_input1_pin_high 06C7             _set_input2_pin_high 06BD                      ?_set_speed 0074  
       ??_OSCILLATOR_Initialize 0070                    ??_initialize 0070            ?_set_input1_pin_high 0070  
          ?_set_input2_pin_high 0070                        __ptext10 06B3                        __ptext11 06A9  
                      __ptext12 0699                        __ptext13 0710                        __ptext14 06A2  
         ??_pwm_load_duty_value 0072              __end_of_initialize 077D             set_input1_pin_low@p 0071  
         ??_set_input1_pin_high 0070             set_input2_pin_low@p 0071              _set_input1_pin_low 06B3  
         ??_set_input2_pin_high 0070              _set_input2_pin_low 06D1                        forward@p 0079  
           ?_set_input1_pin_low 0070             ?_set_input2_pin_low 0070         ?_PIN_MANAGER_Initialize 0070  
                   ??_set_speed 0076            ??_set_input1_pin_low 0070            ??_set_input2_pin_low 0070  
__end_of_PIN_MANAGER_Initialize 0726  
