

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat May 13 22:33:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 28/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1827 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0095                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009B                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     0111                     	;# 
   111     0112                     	;# 
   112     0113                     	;# 
   113     0114                     	;# 
   114     0115                     	;# 
   115     0116                     	;# 
   116     0117                     	;# 
   117     0118                     	;# 
   118     0119                     	;# 
   119     011A                     	;# 
   120     011B                     	;# 
   121     011D                     	;# 
   122     011E                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0191                     	;# 
   126     0191                     	;# 
   127     0192                     	;# 
   128     0193                     	;# 
   129     0193                     	;# 
   130     0193                     	;# 
   131     0194                     	;# 
   132     0195                     	;# 
   133     0196                     	;# 
   134     0199                     	;# 
   135     019A                     	;# 
   136     019B                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019C                     	;# 
   142     019D                     	;# 
   143     019E                     	;# 
   144     019F                     	;# 
   145     020C                     	;# 
   146     020D                     	;# 
   147     0211                     	;# 
   148     0211                     	;# 
   149     0212                     	;# 
   150     0212                     	;# 
   151     0213                     	;# 
   152     0213                     	;# 
   153     0214                     	;# 
   154     0214                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0215                     	;# 
   158     0216                     	;# 
   159     0216                     	;# 
   160     0217                     	;# 
   161     0217                     	;# 
   162     0219                     	;# 
   163     021A                     	;# 
   164     021B                     	;# 
   165     021C                     	;# 
   166     021D                     	;# 
   167     021E                     	;# 
   168     021F                     	;# 
   169     0291                     	;# 
   170     0291                     	;# 
   171     0292                     	;# 
   172     0293                     	;# 
   173     0294                     	;# 
   174     0295                     	;# 
   175     0295                     	;# 
   176     0296                     	;# 
   177     0298                     	;# 
   178     0298                     	;# 
   179     0299                     	;# 
   180     029A                     	;# 
   181     029B                     	;# 
   182     029C                     	;# 
   183     029C                     	;# 
   184     029D                     	;# 
   185     029E                     	;# 
   186     029E                     	;# 
   187     0311                     	;# 
   188     0311                     	;# 
   189     0312                     	;# 
   190     0313                     	;# 
   191     0318                     	;# 
   192     0318                     	;# 
   193     0319                     	;# 
   194     031A                     	;# 
   195     0394                     	;# 
   196     0395                     	;# 
   197     0396                     	;# 
   198     039A                     	;# 
   199     039C                     	;# 
   200     039D                     	;# 
   201     039E                     	;# 
   202     039F                     	;# 
   203     0415                     	;# 
   204     0416                     	;# 
   205     0417                     	;# 
   206     041C                     	;# 
   207     041D                     	;# 
   208     041E                     	;# 
   209     0FE4                     	;# 
   210     0FE5                     	;# 
   211     0FE6                     	;# 
   212     0FE7                     	;# 
   213     0FE8                     	;# 
   214     0FE9                     	;# 
   215     0FEA                     	;# 
   216     0FEB                     	;# 
   217     0FED                     	;# 
   218     0FEE                     	;# 
   219     0FEF                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     0091                     	;# 
   252     0092                     	;# 
   253     0093                     	;# 
   254     0094                     	;# 
   255     0095                     	;# 
   256     0096                     	;# 
   257     0097                     	;# 
   258     0098                     	;# 
   259     0099                     	;# 
   260     009A                     	;# 
   261     009B                     	;# 
   262     009B                     	;# 
   263     009C                     	;# 
   264     009D                     	;# 
   265     009E                     	;# 
   266     010C                     	;# 
   267     010D                     	;# 
   268     0111                     	;# 
   269     0112                     	;# 
   270     0113                     	;# 
   271     0114                     	;# 
   272     0115                     	;# 
   273     0116                     	;# 
   274     0117                     	;# 
   275     0118                     	;# 
   276     0119                     	;# 
   277     011A                     	;# 
   278     011B                     	;# 
   279     011D                     	;# 
   280     011E                     	;# 
   281     018C                     	;# 
   282     018D                     	;# 
   283     0191                     	;# 
   284     0191                     	;# 
   285     0192                     	;# 
   286     0193                     	;# 
   287     0193                     	;# 
   288     0193                     	;# 
   289     0194                     	;# 
   290     0195                     	;# 
   291     0196                     	;# 
   292     0199                     	;# 
   293     019A                     	;# 
   294     019B                     	;# 
   295     019B                     	;# 
   296     019B                     	;# 
   297     019B                     	;# 
   298     019C                     	;# 
   299     019C                     	;# 
   300     019D                     	;# 
   301     019E                     	;# 
   302     019F                     	;# 
   303     020C                     	;# 
   304     020D                     	;# 
   305     0211                     	;# 
   306     0211                     	;# 
   307     0212                     	;# 
   308     0212                     	;# 
   309     0213                     	;# 
   310     0213                     	;# 
   311     0214                     	;# 
   312     0214                     	;# 
   313     0215                     	;# 
   314     0215                     	;# 
   315     0215                     	;# 
   316     0216                     	;# 
   317     0216                     	;# 
   318     0217                     	;# 
   319     0217                     	;# 
   320     0219                     	;# 
   321     021A                     	;# 
   322     021B                     	;# 
   323     021C                     	;# 
   324     021D                     	;# 
   325     021E                     	;# 
   326     021F                     	;# 
   327     0291                     	;# 
   328     0291                     	;# 
   329     0292                     	;# 
   330     0293                     	;# 
   331     0294                     	;# 
   332     0295                     	;# 
   333     0295                     	;# 
   334     0296                     	;# 
   335     0298                     	;# 
   336     0298                     	;# 
   337     0299                     	;# 
   338     029A                     	;# 
   339     029B                     	;# 
   340     029C                     	;# 
   341     029C                     	;# 
   342     029D                     	;# 
   343     029E                     	;# 
   344     029E                     	;# 
   345     0311                     	;# 
   346     0311                     	;# 
   347     0312                     	;# 
   348     0313                     	;# 
   349     0318                     	;# 
   350     0318                     	;# 
   351     0319                     	;# 
   352     031A                     	;# 
   353     0394                     	;# 
   354     0395                     	;# 
   355     0396                     	;# 
   356     039A                     	;# 
   357     039C                     	;# 
   358     039D                     	;# 
   359     039E                     	;# 
   360     039F                     	;# 
   361     0415                     	;# 
   362     0416                     	;# 
   363     0417                     	;# 
   364     041C                     	;# 
   365     041D                     	;# 
   366     041E                     	;# 
   367     0FE4                     	;# 
   368     0FE5                     	;# 
   369     0FE6                     	;# 
   370     0FE7                     	;# 
   371     0FE8                     	;# 
   372     0FE9                     	;# 
   373     0FEA                     	;# 
   374     0FEB                     	;# 
   375     0FED                     	;# 
   376     0FEE                     	;# 
   377     0FEF                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0016                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001B                     	;# 
   404     001C                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     008C                     	;# 
   408     008D                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0094                     	;# 
   413     0095                     	;# 
   414     0096                     	;# 
   415     0097                     	;# 
   416     0098                     	;# 
   417     0099                     	;# 
   418     009A                     	;# 
   419     009B                     	;# 
   420     009B                     	;# 
   421     009C                     	;# 
   422     009D                     	;# 
   423     009E                     	;# 
   424     010C                     	;# 
   425     010D                     	;# 
   426     0111                     	;# 
   427     0112                     	;# 
   428     0113                     	;# 
   429     0114                     	;# 
   430     0115                     	;# 
   431     0116                     	;# 
   432     0117                     	;# 
   433     0118                     	;# 
   434     0119                     	;# 
   435     011A                     	;# 
   436     011B                     	;# 
   437     011D                     	;# 
   438     011E                     	;# 
   439     018C                     	;# 
   440     018D                     	;# 
   441     0191                     	;# 
   442     0191                     	;# 
   443     0192                     	;# 
   444     0193                     	;# 
   445     0193                     	;# 
   446     0193                     	;# 
   447     0194                     	;# 
   448     0195                     	;# 
   449     0196                     	;# 
   450     0199                     	;# 
   451     019A                     	;# 
   452     019B                     	;# 
   453     019B                     	;# 
   454     019B                     	;# 
   455     019B                     	;# 
   456     019C                     	;# 
   457     019C                     	;# 
   458     019D                     	;# 
   459     019E                     	;# 
   460     019F                     	;# 
   461     020C                     	;# 
   462     020D                     	;# 
   463     0211                     	;# 
   464     0211                     	;# 
   465     0212                     	;# 
   466     0212                     	;# 
   467     0213                     	;# 
   468     0213                     	;# 
   469     0214                     	;# 
   470     0214                     	;# 
   471     0215                     	;# 
   472     0215                     	;# 
   473     0215                     	;# 
   474     0216                     	;# 
   475     0216                     	;# 
   476     0217                     	;# 
   477     0217                     	;# 
   478     0219                     	;# 
   479     021A                     	;# 
   480     021B                     	;# 
   481     021C                     	;# 
   482     021D                     	;# 
   483     021E                     	;# 
   484     021F                     	;# 
   485     0291                     	;# 
   486     0291                     	;# 
   487     0292                     	;# 
   488     0293                     	;# 
   489     0294                     	;# 
   490     0295                     	;# 
   491     0295                     	;# 
   492     0296                     	;# 
   493     0298                     	;# 
   494     0298                     	;# 
   495     0299                     	;# 
   496     029A                     	;# 
   497     029B                     	;# 
   498     029C                     	;# 
   499     029C                     	;# 
   500     029D                     	;# 
   501     029E                     	;# 
   502     029E                     	;# 
   503     0311                     	;# 
   504     0311                     	;# 
   505     0312                     	;# 
   506     0313                     	;# 
   507     0318                     	;# 
   508     0318                     	;# 
   509     0319                     	;# 
   510     031A                     	;# 
   511     0394                     	;# 
   512     0395                     	;# 
   513     0396                     	;# 
   514     039A                     	;# 
   515     039C                     	;# 
   516     039D                     	;# 
   517     039E                     	;# 
   518     039F                     	;# 
   519     0415                     	;# 
   520     0416                     	;# 
   521     0417                     	;# 
   522     041C                     	;# 
   523     041D                     	;# 
   524     041E                     	;# 
   525     0FE4                     	;# 
   526     0FE5                     	;# 
   527     0FE6                     	;# 
   528     0FE7                     	;# 
   529     0FE8                     	;# 
   530     0FE9                     	;# 
   531     0FEA                     	;# 
   532     0FEB                     	;# 
   533     0FED                     	;# 
   534     0FEE                     	;# 
   535     0FEF                     	;# 
   536     0000                     	;# 
   537     0001                     	;# 
   538     0002                     	;# 
   539     0003                     	;# 
   540     0004                     	;# 
   541     0005                     	;# 
   542     0006                     	;# 
   543     0007                     	;# 
   544     0008                     	;# 
   545     0009                     	;# 
   546     000A                     	;# 
   547     000B                     	;# 
   548     000C                     	;# 
   549     000D                     	;# 
   550     0011                     	;# 
   551     0012                     	;# 
   552     0013                     	;# 
   553     0014                     	;# 
   554     0015                     	;# 
   555     0016                     	;# 
   556     0016                     	;# 
   557     0017                     	;# 
   558     0018                     	;# 
   559     0019                     	;# 
   560     001A                     	;# 
   561     001B                     	;# 
   562     001C                     	;# 
   563     001E                     	;# 
   564     001F                     	;# 
   565     008C                     	;# 
   566     008D                     	;# 
   567     0091                     	;# 
   568     0092                     	;# 
   569     0093                     	;# 
   570     0094                     	;# 
   571     0095                     	;# 
   572     0096                     	;# 
   573     0097                     	;# 
   574     0098                     	;# 
   575     0099                     	;# 
   576     009A                     	;# 
   577     009B                     	;# 
   578     009B                     	;# 
   579     009C                     	;# 
   580     009D                     	;# 
   581     009E                     	;# 
   582     010C                     	;# 
   583     010D                     	;# 
   584     0111                     	;# 
   585     0112                     	;# 
   586     0113                     	;# 
   587     0114                     	;# 
   588     0115                     	;# 
   589     0116                     	;# 
   590     0117                     	;# 
   591     0118                     	;# 
   592     0119                     	;# 
   593     011A                     	;# 
   594     011B                     	;# 
   595     011D                     	;# 
   596     011E                     	;# 
   597     018C                     	;# 
   598     018D                     	;# 
   599     0191                     	;# 
   600     0191                     	;# 
   601     0192                     	;# 
   602     0193                     	;# 
   603     0193                     	;# 
   604     0193                     	;# 
   605     0194                     	;# 
   606     0195                     	;# 
   607     0196                     	;# 
   608     0199                     	;# 
   609     019A                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019B                     	;# 
   614     019C                     	;# 
   615     019C                     	;# 
   616     019D                     	;# 
   617     019E                     	;# 
   618     019F                     	;# 
   619     020C                     	;# 
   620     020D                     	;# 
   621     0211                     	;# 
   622     0211                     	;# 
   623     0212                     	;# 
   624     0212                     	;# 
   625     0213                     	;# 
   626     0213                     	;# 
   627     0214                     	;# 
   628     0214                     	;# 
   629     0215                     	;# 
   630     0215                     	;# 
   631     0215                     	;# 
   632     0216                     	;# 
   633     0216                     	;# 
   634     0217                     	;# 
   635     0217                     	;# 
   636     0219                     	;# 
   637     021A                     	;# 
   638     021B                     	;# 
   639     021C                     	;# 
   640     021D                     	;# 
   641     021E                     	;# 
   642     021F                     	;# 
   643     0291                     	;# 
   644     0291                     	;# 
   645     0292                     	;# 
   646     0293                     	;# 
   647     0294                     	;# 
   648     0295                     	;# 
   649     0295                     	;# 
   650     0296                     	;# 
   651     0298                     	;# 
   652     0298                     	;# 
   653     0299                     	;# 
   654     029A                     	;# 
   655     029B                     	;# 
   656     029C                     	;# 
   657     029C                     	;# 
   658     029D                     	;# 
   659     029E                     	;# 
   660     029E                     	;# 
   661     0311                     	;# 
   662     0311                     	;# 
   663     0312                     	;# 
   664     0313                     	;# 
   665     0318                     	;# 
   666     0318                     	;# 
   667     0319                     	;# 
   668     031A                     	;# 
   669     0394                     	;# 
   670     0395                     	;# 
   671     0396                     	;# 
   672     039A                     	;# 
   673     039C                     	;# 
   674     039D                     	;# 
   675     039E                     	;# 
   676     039F                     	;# 
   677     0415                     	;# 
   678     0416                     	;# 
   679     0417                     	;# 
   680     041C                     	;# 
   681     041D                     	;# 
   682     041E                     	;# 
   683     0FE4                     	;# 
   684     0FE5                     	;# 
   685     0FE6                     	;# 
   686     0FE7                     	;# 
   687     0FE8                     	;# 
   688     0FE9                     	;# 
   689     0FEA                     	;# 
   690     0FEB                     	;# 
   691     0FED                     	;# 
   692     0FEE                     	;# 
   693     0FEF                     	;# 
   694     0000                     	;# 
   695     0001                     	;# 
   696     0002                     	;# 
   697     0003                     	;# 
   698     0004                     	;# 
   699     0005                     	;# 
   700     0006                     	;# 
   701     0007                     	;# 
   702     0008                     	;# 
   703     0009                     	;# 
   704     000A                     	;# 
   705     000B                     	;# 
   706     000C                     	;# 
   707     000D                     	;# 
   708     0011                     	;# 
   709     0012                     	;# 
   710     0013                     	;# 
   711     0014                     	;# 
   712     0015                     	;# 
   713     0016                     	;# 
   714     0016                     	;# 
   715     0017                     	;# 
   716     0018                     	;# 
   717     0019                     	;# 
   718     001A                     	;# 
   719     001B                     	;# 
   720     001C                     	;# 
   721     001E                     	;# 
   722     001F                     	;# 
   723     008C                     	;# 
   724     008D                     	;# 
   725     0091                     	;# 
   726     0092                     	;# 
   727     0093                     	;# 
   728     0094                     	;# 
   729     0095                     	;# 
   730     0096                     	;# 
   731     0097                     	;# 
   732     0098                     	;# 
   733     0099                     	;# 
   734     009A                     	;# 
   735     009B                     	;# 
   736     009B                     	;# 
   737     009C                     	;# 
   738     009D                     	;# 
   739     009E                     	;# 
   740     010C                     	;# 
   741     010D                     	;# 
   742     0111                     	;# 
   743     0112                     	;# 
   744     0113                     	;# 
   745     0114                     	;# 
   746     0115                     	;# 
   747     0116                     	;# 
   748     0117                     	;# 
   749     0118                     	;# 
   750     0119                     	;# 
   751     011A                     	;# 
   752     011B                     	;# 
   753     011D                     	;# 
   754     011E                     	;# 
   755     018C                     	;# 
   756     018D                     	;# 
   757     0191                     	;# 
   758     0191                     	;# 
   759     0192                     	;# 
   760     0193                     	;# 
   761     0193                     	;# 
   762     0193                     	;# 
   763     0194                     	;# 
   764     0195                     	;# 
   765     0196                     	;# 
   766     0199                     	;# 
   767     019A                     	;# 
   768     019B                     	;# 
   769     019B                     	;# 
   770     019B                     	;# 
   771     019B                     	;# 
   772     019C                     	;# 
   773     019C                     	;# 
   774     019D                     	;# 
   775     019E                     	;# 
   776     019F                     	;# 
   777     020C                     	;# 
   778     020D                     	;# 
   779     0211                     	;# 
   780     0211                     	;# 
   781     0212                     	;# 
   782     0212                     	;# 
   783     0213                     	;# 
   784     0213                     	;# 
   785     0214                     	;# 
   786     0214                     	;# 
   787     0215                     	;# 
   788     0215                     	;# 
   789     0215                     	;# 
   790     0216                     	;# 
   791     0216                     	;# 
   792     0217                     	;# 
   793     0217                     	;# 
   794     0219                     	;# 
   795     021A                     	;# 
   796     021B                     	;# 
   797     021C                     	;# 
   798     021D                     	;# 
   799     021E                     	;# 
   800     021F                     	;# 
   801     0291                     	;# 
   802     0291                     	;# 
   803     0292                     	;# 
   804     0293                     	;# 
   805     0294                     	;# 
   806     0295                     	;# 
   807     0295                     	;# 
   808     0296                     	;# 
   809     0298                     	;# 
   810     0298                     	;# 
   811     0299                     	;# 
   812     029A                     	;# 
   813     029B                     	;# 
   814     029C                     	;# 
   815     029C                     	;# 
   816     029D                     	;# 
   817     029E                     	;# 
   818     029E                     	;# 
   819     0311                     	;# 
   820     0311                     	;# 
   821     0312                     	;# 
   822     0313                     	;# 
   823     0318                     	;# 
   824     0318                     	;# 
   825     0319                     	;# 
   826     031A                     	;# 
   827     0394                     	;# 
   828     0395                     	;# 
   829     0396                     	;# 
   830     039A                     	;# 
   831     039C                     	;# 
   832     039D                     	;# 
   833     039E                     	;# 
   834     039F                     	;# 
   835     0415                     	;# 
   836     0416                     	;# 
   837     0417                     	;# 
   838     041C                     	;# 
   839     041D                     	;# 
   840     041E                     	;# 
   841     0FE4                     	;# 
   842     0FE5                     	;# 
   843     0FE6                     	;# 
   844     0FE7                     	;# 
   845     0FE8                     	;# 
   846     0FE9                     	;# 
   847     0FEA                     	;# 
   848     0FEB                     	;# 
   849     0FED                     	;# 
   850     0FEE                     	;# 
   851     0FEF                     	;# 
   852                           
   853                           	psect	idataBANK0
   854     069E                     __pidataBANK0:
   855                           
   856                           ;initializer for main@F2836
   857     069E  3401               	retlw	1
   858     069F  3402               	retlw	2
   859     06A0  3408               	retlw	8
   860     06A1  3400               	retlw	0
   861     06A2  3400               	retlw	0
   862     001C                     _T2CON	set	28
   863     0011                     _PIR1bits	set	17
   864     001A                     _TMR2	set	26
   865     001B                     _PR2	set	27
   866     0097                     _WDTCON	set	151
   867     0098                     _OSCTUNE	set	152
   868     0099                     _OSCCON	set	153
   869     0095                     _OPTION_REGbits	set	149
   870     008D                     _TRISB	set	141
   871     008C                     _TRISA	set	140
   872     0116                     _BORCON	set	278
   873     011E                     _APFCON1	set	286
   874     011D                     _APFCON0	set	285
   875     010D                     _LATB	set	269
   876     010C                     _LATA	set	268
   877     018C                     _ANSELA	set	396
   878     018D                     _ANSELB	set	397
   879     020C                     _WPUA	set	524
   880     020D                     _WPUB	set	525
   881     029E                     _CCPTMRS0bits	set	670
   882     0312                     _CCPR3H	set	786
   883     0311                     _CCPR3L	set	785
   884     0313                     _CCP3CON	set	787
   885                           
   886                           	psect	cinit
   887     07EF                     start_initialization:	
   888                           ; #config settings
   889                           
   890     07EF                     __initialization:
   891                           
   892                           ; Initialize objects allocated to BANK0
   893     07EF  309E               	movlw	low __pidataBANK0
   894     07F0  0084               	movwf	4
   895     07F1  3086               	movlw	(high __pidataBANK0)| (0+128)
   896     07F2  0085               	movwf	5
   897     07F3  0012               	moviw fsr0++
   898     07F4  00A8               	movwf	__pdataBANK0& (0+127)
   899     07F5  0012               	moviw fsr0++
   900     07F6  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   901     07F7  0012               	moviw fsr0++
   902     07F8  00AA               	movwf	(__pdataBANK0+2)& (0+127)
   903     07F9  0012               	moviw fsr0++
   904     07FA  00AB               	movwf	(__pdataBANK0+3)& (0+127)
   905     07FB  0012               	moviw fsr0++
   906     07FC  00AC               	movwf	(__pdataBANK0+4)& (0+127)
   907     07FD                     end_of_initialization:	
   908                           ;End of C runtime variable initialization code
   909                           
   910     07FD                     __end_of__initialization:
   911     07FD  0020               	movlb	0
   912     07FE  3187  2F7E         	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	dataBANK0
   915     0028                     __pdataBANK0:
   916     0028                     main@F2836:
   917     0028                     	ds	5
   918                           
   919                           	psect	cstackCOMMON
   920     0070                     __pcstackCOMMON:
   921     0070                     ?_OSCILLATOR_Initialize:
   922     0070                     ??_OSCILLATOR_Initialize:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_WDT_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ??_WDT_Initialize:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_initialize:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ??_initialize:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_stop:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_pwm_load_duty_value:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_PIN_MANAGER_Initialize:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ??_PIN_MANAGER_Initialize:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_SYSTEM_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ??_SYSTEM_Initialize:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?_main:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ?_set_input1_pin_low:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ??_set_input1_pin_low:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_set_input1_pin_high:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ??_set_input1_pin_high:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ?_set_input2_pin_low:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ??_set_input2_pin_low:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_set_input2_pin_high:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ??_set_input2_pin_high:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     pwm_load_duty_value@duty_value:	
   983                           ; 1 bytes @ 0x0
   984                           
   985                           
   986                           ; 2 bytes @ 0x0
   987     0070                     	ds	1
   988     0071                     set_input1_pin_low@p:
   989     0071                     set_input1_pin_high@p:	
   990                           ; 1 bytes @ 0x1
   991                           
   992     0071                     set_input2_pin_low@p:	
   993                           ; 1 bytes @ 0x1
   994                           
   995     0071                     set_input2_pin_high@p:	
   996                           ; 1 bytes @ 0x1
   997                           
   998     0071                     initialize@p:	
   999                           ; 1 bytes @ 0x1
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x1
  1003     0071                     	ds	1
  1004     0072                     ??_pwm_load_duty_value:
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007     0072                     	ds	2
  1008     0074                     ?_set_speed:
  1009     0074                     set_speed@speed:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014     0074                     	ds	2
  1015     0076                     ??_set_speed:
  1016     0076                     set_speed@p:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x6
  1021     0076                     	ds	1
  1022     0077                     ??_stop:
  1023     0077                     ?_forward:	
  1024                           ; 1 bytes @ 0x7
  1025                           
  1026     0077                     ?_back:	
  1027                           ; 1 bytes @ 0x7
  1028                           
  1029     0077                     stop@p:	
  1030                           ; 1 bytes @ 0x7
  1031                           
  1032     0077                     forward@value:	
  1033                           ; 1 bytes @ 0x7
  1034                           
  1035     0077                     back@value:	
  1036                           ; 2 bytes @ 0x7
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x7
  1040     0077                     	ds	2
  1041     0079                     ??_forward:
  1042     0079                     ??_back:	
  1043                           ; 1 bytes @ 0x9
  1044                           
  1045     0079                     forward@p:	
  1046                           ; 1 bytes @ 0x9
  1047                           
  1048     0079                     back@p:	
  1049                           ; 1 bytes @ 0x9
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x9
  1053     0079                     	ds	1
  1054     007A                     ??_main:
  1055                           
  1056                           ; 1 bytes @ 0xA
  1057     007A                     	ds	2
  1058                           
  1059                           	psect	cstackBANK0
  1060     0020                     __pcstackBANK0:
  1061     0020                     main@is_forward:
  1062                           
  1063                           ; 1 bytes @ 0x0
  1064     0020                     	ds	1
  1065     0021                     main@count:
  1066                           
  1067                           ; 2 bytes @ 0x1
  1068     0021                     	ds	2
  1069     0023                     main@ta7291p:
  1070                           
  1071                           ; 5 bytes @ 0x3
  1072     0023                     	ds	5
  1073                           
  1074                           	psect	maintext
  1075     077E                     __pmaintext:	
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 7 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  ta7291p         5    3[BANK0 ] struct .
  1086 ;;  count           2    1[BANK0 ] unsigned short 
  1087 ;;  is_forward      1    0[BANK0 ] _Bool 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : B1F/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1097 ;;      Params:         0       0       0       0       0       0
  1098 ;;      Locals:         0       8       0       0       0       0
  1099 ;;      Temps:          2       0       0       0       0       0
  1100 ;;      Totals:         2       8       0       0       0       0
  1101 ;;Total ram usage:       10 bytes
  1102 ;; Hardware stack levels required when called: 3
  1103 ;; This function calls:
  1104 ;;		_SYSTEM_Initialize
  1105 ;;		_back
  1106 ;;		_forward
  1107 ;;		_initialize
  1108 ;;		_stop
  1109 ;; This function is called by:
  1110 ;;		Startup code after reset
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     077E                     _main:	
  1115                           ;psect for function _main
  1116                           
  1117     077E                     l881:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1120                           
  1121                           
  1122                           ;main.c: 10:     SYSTEM_Initialize();
  1123     077E  3186  26AA  3187   	fcall	_SYSTEM_Initialize
  1124     0781                     l883:
  1125                           
  1126                           ;main.c: 16:     TA7291P ta7291p = {0x01, 0x02, 0x08, 0};
  1127     0781  3028               	movlw	low main@F2836
  1128     0782  0086               	movwf	6
  1129     0783  3000               	movlw	high main@F2836
  1130     0784  0087               	movwf	7
  1131     0785  3023               	movlw	low main@ta7291p
  1132     0786  0084               	movwf	4
  1133     0787  3000               	movlw	high main@ta7291p
  1134     0788  0085               	movwf	5
  1135     0789  3005               	movlw	5
  1136     078A  00FA               	movwf	??_main
  1137     078B                     u100:
  1138     078B  0016               	moviw fsr1++
  1139     078C  001A               	movwi fsr0++
  1140     078D  0BFA               	decfsz	??_main,f
  1141     078E  2F8B               	goto	u100
  1142     078F                     l885:
  1143                           
  1144                           ;main.c: 17:     initialize(&ta7291p);
  1145     078F  3023               	movlw	(low (main@ta7291p| 0))& (0+255)
  1146     0790  3187  275C  3187   	fcall	_initialize
  1147     0793                     l887:
  1148                           
  1149                           ;main.c: 22:  CCP3CON = 0x3C;
  1150     0793  303C               	movlw	60
  1151     0794  0026               	movlb	6	; select bank6
  1152     0795  0093               	movwf	19	;volatile
  1153     0796                     l889:
  1154                           
  1155                           ;main.c: 24:  CCPR3L = 0x7F;
  1156     0796  307F               	movlw	127
  1157     0797  0091               	movwf	17	;volatile
  1158     0798                     l891:
  1159                           
  1160                           ;main.c: 26:  CCPR3H = 0x00;
  1161     0798  0192               	clrf	18	;volatile
  1162     0799                     l893:
  1163                           
  1164                           ;main.c: 28:  CCPTMRS0bits.C3TSEL = 0x0;
  1165     0799  30CF               	movlw	-49
  1166     079A  0025               	movlb	5	; select bank5
  1167     079B  059E               	andwf	30,f	;volatile
  1168     079C                     l895:
  1169                           
  1170                           ;main.c: 32:     PR2 = 0xFF;
  1171     079C  30FF               	movlw	255
  1172     079D  0020               	movlb	0	; select bank0
  1173     079E  009B               	movwf	27	;volatile
  1174     079F                     l897:
  1175                           
  1176                           ;main.c: 34:     TMR2 = 0x00;
  1177     079F  019A               	clrf	26	;volatile
  1178     07A0                     l899:
  1179                           
  1180                           ;main.c: 36:     PIR1bits.TMR2IF = 0;
  1181     07A0  1091               	bcf	17,1	;volatile
  1182     07A1                     l901:
  1183                           
  1184                           ;main.c: 38:     T2CON = 0x04;
  1185     07A1  3004               	movlw	4
  1186     07A2  009C               	movwf	28	;volatile
  1187     07A3                     l903:
  1188                           
  1189                           ;main.c: 40:     uint16_t count = 0;
  1190     07A3  01A1               	clrf	main@count
  1191     07A4  01A2               	clrf	main@count+1
  1192     07A5                     l905:
  1193                           
  1194                           ;main.c: 42:     _Bool is_forward = 1;
  1195     07A5  01A0               	clrf	main@is_forward
  1196     07A6  0AA0               	incf	main@is_forward,f
  1197     07A7                     l907:
  1198                           
  1199                           ;main.c: 44:     {;main.c: 45:         if(count == 1023){
  1200     07A7  0A21               	incf	main@count,w
  1201     07A8  3003               	movlw	3
  1202     07A9  1903               	skipnz
  1203     07AA  0622               	xorwf	main@count+1,w
  1204     07AB  1D03               	btfss	3,2
  1205     07AC  2FAE               	goto	u111
  1206     07AD  2FAF               	goto	u110
  1207     07AE                     u111:
  1208     07AE  2FC9               	goto	l917
  1209     07AF                     u110:
  1210     07AF                     l909:
  1211                           
  1212                           ;main.c: 46:             count = 0;
  1213     07AF  01A1               	clrf	main@count
  1214     07B0  01A2               	clrf	main@count+1
  1215     07B1                     l911:
  1216                           
  1217                           ;main.c: 47:             stop(&ta7291p);
  1218     07B1  3023               	movlw	(low (main@ta7291p| 0))& (0+255)
  1219     07B2  3186  26DC  3187   	fcall	_stop
  1220     07B5                     l913:
  1221                           
  1222                           ;main.c: 48:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1223     07B5  300B               	movlw	11
  1224     07B6  00FB               	movwf	??_main+1
  1225     07B7  3026               	movlw	38
  1226     07B8  00FA               	movwf	??_main
  1227     07B9  305E               	movlw	94
  1228     07BA                     u157:
  1229     07BA  0B89               	decfsz	9,f
  1230     07BB  2FBA               	goto	u157
  1231     07BC  0BFA               	decfsz	??_main,f
  1232     07BD  2FBA               	goto	u157
  1233     07BE  0BFB               	decfsz	??_main+1,f
  1234     07BF  2FBA               	goto	u157
  1235     07C0                     l915:
  1236                           
  1237                           ;main.c: 49:             is_forward = !is_forward;
  1238     07C0  0020               	movlb	0	; select bank0
  1239     07C1  0820               	movf	main@is_forward,w
  1240     07C2  1903               	btfsc	3,2
  1241     07C3  2FC5               	goto	u121
  1242     07C4  2FC7               	goto	u120
  1243     07C5                     u121:
  1244     07C5  3001               	movlw	1
  1245     07C6  2FC8               	goto	u130
  1246     07C7                     u120:
  1247     07C7  3000               	movlw	0
  1248     07C8                     u130:
  1249     07C8  00A0               	movwf	main@is_forward
  1250     07C9                     l917:
  1251                           
  1252                           ;main.c: 52:         if(is_forward){
  1253     07C9  0820               	movf	main@is_forward,w
  1254     07CA  1903               	btfsc	3,2
  1255     07CB  2FCD               	goto	u141
  1256     07CC  2FCE               	goto	u140
  1257     07CD                     u141:
  1258     07CD  2FD7               	goto	l921
  1259     07CE                     u140:
  1260     07CE                     l919:
  1261                           
  1262                           ;main.c: 53:             forward(&ta7291p, count);
  1263     07CE  0822               	movf	main@count+1,w
  1264     07CF  00F8               	movwf	forward@value+1
  1265     07D0  0821               	movf	main@count,w
  1266     07D1  00F7               	movwf	forward@value
  1267     07D2  3023               	movlw	(low (main@ta7291p| 0))& (0+255)
  1268     07D3  3186  26FF  3187   	fcall	_forward
  1269                           
  1270                           ;main.c: 54:         }else{
  1271     07D6  2FDF               	goto	l923
  1272     07D7                     l921:
  1273                           
  1274                           ;main.c: 55:             back(&ta7291p, count);
  1275     07D7  0822               	movf	main@count+1,w
  1276     07D8  00F8               	movwf	back@value+1
  1277     07D9  0821               	movf	main@count,w
  1278     07DA  00F7               	movwf	back@value
  1279     07DB  3023               	movlw	(low (main@ta7291p| 0))& (0+255)
  1280     07DC  3186  26ED  3187   	fcall	_back
  1281     07DF                     l923:
  1282                           
  1283                           ;main.c: 59:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1284     07DF  301A               	movlw	26
  1285     07E0  00FA               	movwf	??_main
  1286     07E1  30F8               	movlw	248
  1287     07E2                     u167:
  1288     07E2  0B89               	decfsz	9,f
  1289     07E3  2FE2               	goto	u167
  1290     07E4  0BFA               	decfsz	??_main,f
  1291     07E5  2FE2               	goto	u167
  1292     07E6  3200               	nop2
  1293     07E7                     l925:
  1294                           
  1295                           ;main.c: 61:         count++;
  1296     07E7  3001               	movlw	1
  1297     07E8  0020               	movlb	0	; select bank0
  1298     07E9  07A1               	addwf	main@count,f
  1299     07EA  3000               	movlw	0
  1300     07EB  3DA2               	addwfc	main@count+1,f
  1301     07EC  2FA7               	goto	l907
  1302     07ED  3180  2802         	ljmp	start
  1303     07EF                     __end_of_main:
  1304                           
  1305                           	psect	text1
  1306     06DC                     __ptext1:	
  1307 ;; *************** function _stop *****************
  1308 ;; Defined at:
  1309 ;;		line 62 in file "ta7291p.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  p               1    wreg     PTR struct .
  1312 ;;		 -> main@ta7291p(5), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  p               1    7[COMMON] PTR struct .
  1315 ;;		 -> main@ta7291p(5), 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1325 ;;      Params:         0       0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0
  1328 ;;      Totals:         1       0       0       0       0       0
  1329 ;;Total ram usage:        1 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 2
  1332 ;; This function calls:
  1333 ;;		_set_input1_pin_low
  1334 ;;		_set_input2_pin_low
  1335 ;;		_set_speed
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     06DC                     _stop:	
  1342                           ;psect for function _stop
  1343                           
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1347                           ;stop@p stored from wreg
  1348     06DC  00F7               	movwf	stop@p
  1349     06DD                     l875:
  1350                           
  1351                           ;ta7291p.c: 63:     set_input1_pin_low(p);
  1352     06DD  0877               	movf	stop@p,w
  1353     06DE  3186  26B4  3186   	fcall	_set_input1_pin_low
  1354                           
  1355                           ;ta7291p.c: 64:     set_input2_pin_low(p);
  1356     06E1  0877               	movf	stop@p,w
  1357     06E2  3186  26D2  3186   	fcall	_set_input2_pin_low
  1358                           
  1359                           ;ta7291p.c: 66:     set_speed(p, 0);
  1360     06E5  3000               	movlw	0
  1361     06E6  00F4               	movwf	set_speed@speed
  1362     06E7  00F5               	movwf	set_speed@speed+1
  1363     06E8  0877               	movf	stop@p,w
  1364     06E9  3187  273E  3186   	fcall	_set_speed
  1365     06EC                     l129:
  1366     06EC  0008               	return
  1367     06ED                     __end_of_stop:
  1368                           
  1369                           	psect	text2
  1370     075C                     __ptext2:	
  1371 ;; *************** function _initialize *****************
  1372 ;; Defined at:
  1373 ;;		line 21 in file "ta7291p.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  p               1    wreg     PTR struct .
  1376 ;;		 -> main@ta7291p(5), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  p               1    1[COMMON] PTR struct .
  1379 ;;		 -> main@ta7291p(5), 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1389 ;;      Params:         0       0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0       0
  1391 ;;      Temps:          1       0       0       0       0       0
  1392 ;;      Totals:         2       0       0       0       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     075C                     _initialize:	
  1403                           ;psect for function _initialize
  1404                           
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  1408                           ;initialize@p stored from wreg
  1409     075C  00F1               	movwf	initialize@p
  1410     075D                     l873:
  1411                           
  1412                           ;ta7291p.c: 26:     TRISA &= ~p->input1_pin;
  1413     075D  0871               	movf	initialize@p,w
  1414     075E  0086               	movwf	6
  1415     075F  0187               	clrf	7
  1416     0760  0901               	comf	1,w
  1417     0761  00F0               	movwf	??_initialize
  1418     0762  0870               	movf	??_initialize,w
  1419     0763  0021               	movlb	1	; select bank1
  1420     0764  058C               	andwf	12,f	;volatile
  1421                           
  1422                           ;ta7291p.c: 27:     TRISA &= ~p->input2_pin;
  1423     0765  0A71               	incf	initialize@p,w
  1424     0766  0086               	movwf	6
  1425     0767  0187               	clrf	7
  1426     0768  0901               	comf	1,w
  1427     0769  00F0               	movwf	??_initialize
  1428     076A  0870               	movf	??_initialize,w
  1429     076B  058C               	andwf	12,f	;volatile
  1430                           
  1431                           ;ta7291p.c: 28:     TRISA &= ~p->vref_pin;
  1432     076C  0871               	movf	initialize@p,w
  1433     076D  3E02               	addlw	2
  1434     076E  0086               	movwf	6
  1435     076F  0187               	clrf	7
  1436     0770  0901               	comf	1,w
  1437     0771  00F0               	movwf	??_initialize
  1438     0772  0870               	movf	??_initialize,w
  1439     0773  058C               	andwf	12,f	;volatile
  1440                           
  1441                           ;ta7291p.c: 31:     ANSELA |= p->vref_pin;
  1442     0774  0871               	movf	initialize@p,w
  1443     0775  3E02               	addlw	2
  1444     0776  0086               	movwf	6
  1445     0777  0187               	clrf	7
  1446     0778  0801               	movf	1,w
  1447     0779  00F0               	movwf	??_initialize
  1448     077A  0870               	movf	??_initialize,w
  1449     077B  0023               	movlb	3	; select bank3
  1450     077C  048C               	iorwf	12,f	;volatile
  1451     077D                     l119:
  1452     077D  0008               	return
  1453     077E                     __end_of_initialize:
  1454                           
  1455                           	psect	text3
  1456     06FF                     __ptext3:	
  1457 ;; *************** function _forward *****************
  1458 ;; Defined at:
  1459 ;;		line 74 in file "ta7291p.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  p               1    wreg     PTR struct .
  1462 ;;		 -> main@ta7291p(5), 
  1463 ;;  value           2    7[COMMON] unsigned short 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  p               1    9[COMMON] PTR struct .
  1466 ;;		 -> main@ta7291p(5), 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1476 ;;      Params:         2       0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0
  1479 ;;      Totals:         3       0       0       0       0       0
  1480 ;;Total ram usage:        3 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 2
  1483 ;; This function calls:
  1484 ;;		_set_input1_pin_high
  1485 ;;		_set_input2_pin_low
  1486 ;;		_set_speed
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492     06FF                     _forward:	
  1493                           ;psect for function _forward
  1494                           
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _forward: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1498                           ;forward@p stored from wreg
  1499     06FF  00F9               	movwf	forward@p
  1500     0700                     l877:
  1501                           
  1502                           ;ta7291p.c: 75:     set_input1_pin_high(p);
  1503     0700  0879               	movf	forward@p,w
  1504     0701  3186  26C8  3186   	fcall	_set_input1_pin_high
  1505                           
  1506                           ;ta7291p.c: 76:     set_input2_pin_low(p);
  1507     0704  0879               	movf	forward@p,w
  1508     0705  3186  26D2  3186   	fcall	_set_input2_pin_low
  1509                           
  1510                           ;ta7291p.c: 78:     set_speed(p, value);
  1511     0708  0878               	movf	forward@value+1,w
  1512     0709  00F5               	movwf	set_speed@speed+1
  1513     070A  0877               	movf	forward@value,w
  1514     070B  00F4               	movwf	set_speed@speed
  1515     070C  0879               	movf	forward@p,w
  1516     070D  3187  273E  3186   	fcall	_set_speed
  1517     0710                     l132:
  1518     0710  0008               	return
  1519     0711                     __end_of_forward:
  1520                           
  1521                           	psect	text4
  1522     06D2                     __ptext4:	
  1523 ;; *************** function _set_input2_pin_low *****************
  1524 ;; Defined at:
  1525 ;;		line 10 in file "ta7291p.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  p               1    wreg     PTR struct .
  1528 ;;		 -> main@ta7291p(5), 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  p               1    1[COMMON] PTR struct .
  1531 ;;		 -> main@ta7291p(5), 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1541 ;;      Params:         0       0       0       0       0       0
  1542 ;;      Locals:         1       0       0       0       0       0
  1543 ;;      Temps:          1       0       0       0       0       0
  1544 ;;      Totals:         2       0       0       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_stop
  1551 ;;		_forward
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555     06D2                     _set_input2_pin_low:	
  1556                           ;psect for function _set_input2_pin_low
  1557                           
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _set_input2_pin_low: [wreg+fsr1l+fsr1h+status,2+status,0]
  1561                           ;set_input2_pin_low@p stored from wreg
  1562     06D2  00F1               	movwf	set_input2_pin_low@p
  1563     06D3                     l861:
  1564                           
  1565                           ;ta7291p.c: 11:     LATA &= ~p->input2_pin;
  1566     06D3  0A71               	incf	set_input2_pin_low@p,w
  1567     06D4  0086               	movwf	6
  1568     06D5  0187               	clrf	7
  1569     06D6  0901               	comf	1,w
  1570     06D7  00F0               	movwf	??_set_input2_pin_low
  1571     06D8  0870               	movf	??_set_input2_pin_low,w
  1572     06D9  0022               	movlb	2	; select bank2
  1573     06DA  058C               	andwf	12,f	;volatile
  1574     06DB                     l113:
  1575     06DB  0008               	return
  1576     06DC                     __end_of_set_input2_pin_low:
  1577                           
  1578                           	psect	text5
  1579     06C8                     __ptext5:	
  1580 ;; *************** function _set_input1_pin_high *****************
  1581 ;; Defined at:
  1582 ;;		line 6 in file "ta7291p.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  p               1    wreg     PTR struct .
  1585 ;;		 -> main@ta7291p(5), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  p               1    1[COMMON] PTR struct .
  1588 ;;		 -> main@ta7291p(5), 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1598 ;;      Params:         0       0       0       0       0       0
  1599 ;;      Locals:         1       0       0       0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0
  1601 ;;      Totals:         2       0       0       0       0       0
  1602 ;;Total ram usage:        2 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_forward
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611     06C8                     _set_input1_pin_high:	
  1612                           ;psect for function _set_input1_pin_high
  1613                           
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _set_input1_pin_high: [wreg+fsr1l+fsr1h+status,2+status,0]
  1617                           ;set_input1_pin_high@p stored from wreg
  1618     06C8  00F1               	movwf	set_input1_pin_high@p
  1619     06C9                     l859:
  1620                           
  1621                           ;ta7291p.c: 7:     LATA |= p->input1_pin;
  1622     06C9  0871               	movf	set_input1_pin_high@p,w
  1623     06CA  0086               	movwf	6
  1624     06CB  0187               	clrf	7
  1625     06CC  0801               	movf	1,w
  1626     06CD  00F0               	movwf	??_set_input1_pin_high
  1627     06CE  0870               	movf	??_set_input1_pin_high,w
  1628     06CF  0022               	movlb	2	; select bank2
  1629     06D0  048C               	iorwf	12,f	;volatile
  1630     06D1                     l110:
  1631     06D1  0008               	return
  1632     06D2                     __end_of_set_input1_pin_high:
  1633                           
  1634                           	psect	text6
  1635     06ED                     __ptext6:	
  1636 ;; *************** function _back *****************
  1637 ;; Defined at:
  1638 ;;		line 86 in file "ta7291p.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  p               1    wreg     PTR struct .
  1641 ;;		 -> main@ta7291p(5), 
  1642 ;;  value           2    7[COMMON] unsigned short 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  p               1    9[COMMON] PTR struct .
  1645 ;;		 -> main@ta7291p(5), 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1655 ;;      Params:         2       0       0       0       0       0
  1656 ;;      Locals:         1       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0
  1658 ;;      Totals:         3       0       0       0       0       0
  1659 ;;Total ram usage:        3 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 2
  1662 ;; This function calls:
  1663 ;;		_set_input1_pin_low
  1664 ;;		_set_input2_pin_high
  1665 ;;		_set_speed
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671     06ED                     _back:	
  1672                           ;psect for function _back
  1673                           
  1674                           
  1675                           ;incstack = 0
  1676                           ; Regs used in _back: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1677                           ;back@p stored from wreg
  1678     06ED  00F9               	movwf	back@p
  1679     06EE                     l879:
  1680                           
  1681                           ;ta7291p.c: 87:     set_input1_pin_low(p);
  1682     06EE  0879               	movf	back@p,w
  1683     06EF  3186  26B4  3186   	fcall	_set_input1_pin_low
  1684                           
  1685                           ;ta7291p.c: 88:     set_input2_pin_high(p);
  1686     06F2  0879               	movf	back@p,w
  1687     06F3  3186  26BE  3186   	fcall	_set_input2_pin_high
  1688                           
  1689                           ;ta7291p.c: 90:     set_speed(p, value);
  1690     06F6  0878               	movf	back@value+1,w
  1691     06F7  00F5               	movwf	set_speed@speed+1
  1692     06F8  0877               	movf	back@value,w
  1693     06F9  00F4               	movwf	set_speed@speed
  1694     06FA  0879               	movf	back@p,w
  1695     06FB  3187  273E  3186   	fcall	_set_speed
  1696     06FE                     l135:
  1697     06FE  0008               	return
  1698     06FF                     __end_of_back:
  1699                           
  1700                           	psect	text7
  1701     073E                     __ptext7:	
  1702 ;; *************** function _set_speed *****************
  1703 ;; Defined at:
  1704 ;;		line 39 in file "ta7291p.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  p               1    wreg     PTR struct .
  1707 ;;		 -> main@ta7291p(5), 
  1708 ;;  speed           2    4[COMMON] unsigned short 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  p               1    6[COMMON] PTR struct .
  1711 ;;		 -> main@ta7291p(5), 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1721 ;;      Params:         2       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0
  1724 ;;      Totals:         3       0       0       0       0       0
  1725 ;;Total ram usage:        3 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 1
  1728 ;; This function calls:
  1729 ;;		_pwm_load_duty_value
  1730 ;; This function is called by:
  1731 ;;		_stop
  1732 ;;		_forward
  1733 ;;		_back
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     073E                     _set_speed:	
  1738                           ;psect for function _set_speed
  1739                           
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _set_speed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1743                           ;set_speed@p stored from wreg
  1744     073E  00F6               	movwf	set_speed@p
  1745     073F                     l865:
  1746                           
  1747                           ;ta7291p.c: 40:     if(speed >= 0 && speed <= 1023){
  1748     073F  3004               	movlw	4
  1749     0740  0275               	subwf	set_speed@speed+1,w
  1750     0741  3000               	movlw	0
  1751     0742  1903               	skipnz
  1752     0743  0274               	subwf	set_speed@speed,w
  1753     0744  1803               	skipnc
  1754     0745  2F47               	goto	u91
  1755     0746  2F48               	goto	u90
  1756     0747                     u91:
  1757     0747  2F5B               	goto	l123
  1758     0748                     u90:
  1759     0748                     l867:
  1760                           
  1761                           ;ta7291p.c: 41:         p->speed = speed;
  1762     0748  0876               	movf	set_speed@p,w
  1763     0749  3E03               	addlw	3
  1764     074A  0086               	movwf	6
  1765     074B  0187               	clrf	7
  1766     074C  0874               	movf	set_speed@speed,w
  1767     074D  3FC0               	movwi [0]fsr1
  1768     074E  0875               	movf	set_speed@speed+1,w
  1769     074F  3FC1               	movwi [1]fsr1
  1770     0750                     l869:
  1771                           
  1772                           ;ta7291p.c: 42:         pwm_load_duty_value(p->speed);
  1773     0750  0876               	movf	set_speed@p,w
  1774     0751  3E03               	addlw	3
  1775     0752  0086               	movwf	6
  1776     0753  0187               	clrf	7
  1777     0754  3F40               	moviw [0]fsr1
  1778     0755  00F0               	movwf	pwm_load_duty_value@duty_value
  1779     0756  3F41               	moviw [1]fsr1
  1780     0757  00F1               	movwf	pwm_load_duty_value@duty_value+1
  1781     0758  3187  2727  3187   	fcall	_pwm_load_duty_value
  1782     075B                     l123:
  1783     075B  0008               	return
  1784     075C                     __end_of_set_speed:
  1785                           
  1786                           	psect	text8
  1787     0727                     __ptext8:	
  1788 ;; *************** function _pwm_load_duty_value *****************
  1789 ;; Defined at:
  1790 ;;		line 50 in file "ta7291p.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  duty_value      2    0[COMMON] unsigned short 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1804 ;;      Params:         2       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0       0
  1807 ;;      Totals:         4       0       0       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_set_speed
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817     0727                     _pwm_load_duty_value:	
  1818                           ;psect for function _pwm_load_duty_value
  1819                           
  1820     0727                     l835:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _pwm_load_duty_value: [wreg+status,2+status,0]
  1823                           
  1824                           
  1825                           ;ta7291p.c: 52:     CCPR3L = ((duty_value & 0x03FC)>>2);
  1826     0727  0871               	movf	pwm_load_duty_value@duty_value+1,w
  1827     0728  00F3               	movwf	??_pwm_load_duty_value+1
  1828     0729  0870               	movf	pwm_load_duty_value@duty_value,w
  1829     072A  00F2               	movwf	??_pwm_load_duty_value
  1830     072B  36F3               	lsrf	??_pwm_load_duty_value+1,f
  1831     072C  0CF2               	rrf	??_pwm_load_duty_value,f
  1832     072D  36F3               	lsrf	??_pwm_load_duty_value+1,f
  1833     072E  0CF2               	rrf	??_pwm_load_duty_value,f
  1834     072F  0872               	movf	??_pwm_load_duty_value,w
  1835     0730  0026               	movlb	6	; select bank6
  1836     0731  0091               	movwf	17	;volatile
  1837                           
  1838                           ;ta7291p.c: 55:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((duty_value & 0x0003)<<4));
  1839     0732  0870               	movf	pwm_load_duty_value@duty_value,w
  1840     0733  3903               	andlw	3
  1841     0734  00F2               	movwf	??_pwm_load_duty_value
  1842     0735  3004               	movlw	4
  1843     0736                     u85:
  1844     0736  35F2               	lslf	??_pwm_load_duty_value,f
  1845     0737  0B89               	decfsz	9,f
  1846     0738  2F36               	goto	u85
  1847     0739  0813               	movf	19,w	;volatile
  1848     073A  39CF               	andlw	207
  1849     073B  0472               	iorwf	??_pwm_load_duty_value,w
  1850     073C  0093               	movwf	19	;volatile
  1851     073D                     l126:
  1852     073D  0008               	return
  1853     073E                     __end_of_pwm_load_duty_value:
  1854                           
  1855                           	psect	text9
  1856     06BE                     __ptext9:	
  1857 ;; *************** function _set_input2_pin_high *****************
  1858 ;; Defined at:
  1859 ;;		line 13 in file "ta7291p.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  p               1    wreg     PTR struct .
  1862 ;;		 -> main@ta7291p(5), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  p               1    1[COMMON] PTR struct .
  1865 ;;		 -> main@ta7291p(5), 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1875 ;;      Params:         0       0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0       0
  1878 ;;      Totals:         2       0       0       0       0       0
  1879 ;;Total ram usage:        2 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_back
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888     06BE                     _set_input2_pin_high:	
  1889                           ;psect for function _set_input2_pin_high
  1890                           
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _set_input2_pin_high: [wreg+fsr1l+fsr1h+status,2+status,0]
  1894                           ;set_input2_pin_high@p stored from wreg
  1895     06BE  00F1               	movwf	set_input2_pin_high@p
  1896     06BF                     l863:
  1897                           
  1898                           ;ta7291p.c: 14:     LATA |= p->input2_pin;
  1899     06BF  0A71               	incf	set_input2_pin_high@p,w
  1900     06C0  0086               	movwf	6
  1901     06C1  0187               	clrf	7
  1902     06C2  0801               	movf	1,w
  1903     06C3  00F0               	movwf	??_set_input2_pin_high
  1904     06C4  0870               	movf	??_set_input2_pin_high,w
  1905     06C5  0022               	movlb	2	; select bank2
  1906     06C6  048C               	iorwf	12,f	;volatile
  1907     06C7                     l116:
  1908     06C7  0008               	return
  1909     06C8                     __end_of_set_input2_pin_high:
  1910                           
  1911                           	psect	text10
  1912     06B4                     __ptext10:	
  1913 ;; *************** function _set_input1_pin_low *****************
  1914 ;; Defined at:
  1915 ;;		line 3 in file "ta7291p.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  p               1    wreg     PTR struct .
  1918 ;;		 -> main@ta7291p(5), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  p               1    1[COMMON] PTR struct .
  1921 ;;		 -> main@ta7291p(5), 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1931 ;;      Params:         0       0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_stop
  1941 ;;		_back
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945     06B4                     _set_input1_pin_low:	
  1946                           ;psect for function _set_input1_pin_low
  1947                           
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _set_input1_pin_low: [wreg+fsr1l+fsr1h+status,2+status,0]
  1951                           ;set_input1_pin_low@p stored from wreg
  1952     06B4  00F1               	movwf	set_input1_pin_low@p
  1953     06B5                     l857:
  1954                           
  1955                           ;ta7291p.c: 4:     LATA &= ~p->input1_pin;
  1956     06B5  0871               	movf	set_input1_pin_low@p,w
  1957     06B6  0086               	movwf	6
  1958     06B7  0187               	clrf	7
  1959     06B8  0901               	comf	1,w
  1960     06B9  00F0               	movwf	??_set_input1_pin_low
  1961     06BA  0870               	movf	??_set_input1_pin_low,w
  1962     06BB  0022               	movlb	2	; select bank2
  1963     06BC  058C               	andwf	12,f	;volatile
  1964     06BD                     l107:
  1965     06BD  0008               	return
  1966     06BE                     __end_of_set_input1_pin_low:
  1967                           
  1968                           	psect	text11
  1969     06AA                     __ptext11:	
  1970 ;; *************** function _SYSTEM_Initialize *****************
  1971 ;; Defined at:
  1972 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1986 ;;      Params:         0       0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0
  1989 ;;      Totals:         0       0       0       0       0       0
  1990 ;;Total ram usage:        0 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 1
  1993 ;; This function calls:
  1994 ;;		_OSCILLATOR_Initialize
  1995 ;;		_PIN_MANAGER_Initialize
  1996 ;;		_WDT_Initialize
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002     06AA                     _SYSTEM_Initialize:	
  2003                           ;psect for function _SYSTEM_Initialize
  2004                           
  2005     06AA                     l871:	
  2006                           ;incstack = 0
  2007                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2008                           
  2009                           
  2010                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2011     06AA  3187  2711  3186   	fcall	_PIN_MANAGER_Initialize
  2012                           
  2013                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2014     06AD  3186  26A3  3186   	fcall	_OSCILLATOR_Initialize
  2015                           
  2016                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2017     06B0  3186  269A  3186   	fcall	_WDT_Initialize
  2018     06B3                     l45:
  2019     06B3  0008               	return
  2020     06B4                     __end_of_SYSTEM_Initialize:
  2021                           
  2022                           	psect	text12
  2023     069A                     __ptext12:	
  2024 ;; *************** function _WDT_Initialize *****************
  2025 ;; Defined at:
  2026 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2040 ;;      Params:         0       0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_SYSTEM_Initialize
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053     069A                     _WDT_Initialize:	
  2054                           ;psect for function _WDT_Initialize
  2055                           
  2056     069A                     l855:	
  2057                           ;incstack = 0
  2058                           ; Regs used in _WDT_Initialize: [wreg]
  2059                           
  2060                           
  2061                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2062     069A  3016               	movlw	22
  2063     069B  0021               	movlb	1	; select bank1
  2064     069C  0097               	movwf	23	;volatile
  2065     069D                     l51:
  2066     069D  0008               	return
  2067     069E                     __end_of_WDT_Initialize:
  2068                           
  2069                           	psect	text13
  2070     0711                     __ptext13:	
  2071 ;; *************** function _PIN_MANAGER_Initialize *****************
  2072 ;; Defined at:
  2073 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2087 ;;      Params:         0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_SYSTEM_Initialize
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100     0711                     _PIN_MANAGER_Initialize:	
  2101                           ;psect for function _PIN_MANAGER_Initialize
  2102                           
  2103     0711                     l837:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2106                           
  2107                           
  2108                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2109     0711  0022               	movlb	2	; select bank2
  2110     0712  018C               	clrf	12	;volatile
  2111                           
  2112                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2113     0713  018D               	clrf	13	;volatile
  2114     0714                     l839:
  2115                           
  2116                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  2117     0714  30FF               	movlw	255
  2118     0715  0021               	movlb	1	; select bank1
  2119     0716  008C               	movwf	12	;volatile
  2120     0717                     l841:
  2121                           
  2122                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2123     0717  30FF               	movlw	255
  2124     0718  008D               	movwf	13	;volatile
  2125     0719                     l843:
  2126                           
  2127                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2128     0719  30FE               	movlw	254
  2129     071A  0023               	movlb	3	; select bank3
  2130     071B  008D               	movwf	13	;volatile
  2131     071C                     l845:
  2132                           
  2133                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2134     071C  301F               	movlw	31
  2135     071D  008C               	movwf	12	;volatile
  2136                           
  2137                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2138     071E  0024               	movlb	4	; select bank4
  2139     071F  018D               	clrf	13	;volatile
  2140                           
  2141                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2142     0720  018C               	clrf	12	;volatile
  2143     0721                     l847:
  2144                           
  2145                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2146     0721  0021               	movlb	1	; select bank1
  2147     0722  1795               	bsf	21,7	;volatile
  2148                           
  2149                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2150     0723  0022               	movlb	2	; select bank2
  2151     0724  019D               	clrf	29	;volatile
  2152                           
  2153                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2154     0725  019E               	clrf	30	;volatile
  2155     0726                     l25:
  2156     0726  0008               	return
  2157     0727                     __end_of_PIN_MANAGER_Initialize:
  2158                           
  2159                           	psect	text14
  2160     06A3                     __ptext14:	
  2161 ;; *************** function _OSCILLATOR_Initialize *****************
  2162 ;; Defined at:
  2163 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2177 ;;      Params:         0       0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_SYSTEM_Initialize
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190     06A3                     _OSCILLATOR_Initialize:	
  2191                           ;psect for function _OSCILLATOR_Initialize
  2192                           
  2193     06A3                     l849:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2196                           
  2197                           
  2198                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x72;
  2199     06A3  3072               	movlw	114
  2200     06A4  0021               	movlb	1	; select bank1
  2201     06A5  0099               	movwf	25	;volatile
  2202     06A6                     l851:
  2203                           
  2204                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  2205     06A6  0198               	clrf	24	;volatile
  2206     06A7                     l853:
  2207                           
  2208                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2209     06A7  0022               	movlb	2	; select bank2
  2210     06A8  0196               	clrf	22	;volatile
  2211     06A9                     l48:
  2212     06A9  0008               	return
  2213     06AA                     __end_of_OSCILLATOR_Initialize:
  2214     007E                     btemp	set	126	;btemp
  2215     007E                     wtemp0	set	126
  2216                           
  2217                           	psect	idloc
  2218                           
  2219                           ;Config register IDLOC0 @ 0x8000
  2220                           ;	unspecified, using default values
  2221     8000                     	org	32768
  2222     8000  3FFF               	dw	16383
  2223                           
  2224                           ;Config register IDLOC1 @ 0x8001
  2225                           ;	unspecified, using default values
  2226     8001                     	org	32769
  2227     8001  3FFF               	dw	16383
  2228                           
  2229                           ;Config register IDLOC2 @ 0x8002
  2230                           ;	unspecified, using default values
  2231     8002                     	org	32770
  2232     8002  3FFF               	dw	16383
  2233                           
  2234                           ;Config register IDLOC3 @ 0x8003
  2235                           ;	unspecified, using default values
  2236     8003                     	org	32771
  2237     8003  3FFF               	dw	16383
  2238                           
  2239                           	psect	config
  2240                           
  2241                           ;Config register CONFIG1 @ 0x8007
  2242                           ;	Oscillator Selection
  2243                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2244                           ;	Watchdog Timer Enable
  2245                           ;	WDTE = OFF, WDT disabled
  2246                           ;	Power-up Timer Enable
  2247                           ;	PWRTE = OFF, PWRT disabled
  2248                           ;	MCLR Pin Function Select
  2249                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2250                           ;	Flash Program Memory Code Protection
  2251                           ;	CP = OFF, Program memory code protection is disabled
  2252                           ;	Data Memory Code Protection
  2253                           ;	CPD = OFF, Data memory code protection is disabled
  2254                           ;	Brown-out Reset Enable
  2255                           ;	BOREN = ON, Brown-out Reset enabled
  2256                           ;	Clock Out Enable
  2257                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2258                           ;	Internal/External Switchover
  2259                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2260                           ;	Fail-Safe Clock Monitor Enable
  2261                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2262     8007                     	org	32775
  2263     8007  3FE4               	dw	16356
  2264                           
  2265                           ;Config register CONFIG2 @ 0x8008
  2266                           ;	Flash Memory Self-Write Protection
  2267                           ;	WRT = OFF, Write protection off
  2268                           ;	PLL Enable
  2269                           ;	PLLEN = OFF, 4x PLL disabled
  2270                           ;	Stack Overflow/Underflow Reset Enable
  2271                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2272                           ;	Brown-out Reset Voltage Selection
  2273                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2274                           ;	In-Circuit Debugger Mode
  2275                           ;	DEBUG = 0x1, unprogrammed default
  2276                           ;	Low-Voltage Programming Enable
  2277                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2278     8008                     	org	32776
  2279     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      8      13
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    back@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    forward@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    stop@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_speed@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    initialize@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input2_pin_high@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input2_pin_low@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input1_pin_high@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 

    set_input1_pin_low@p	PTR struct . size(1) Largest target is 5
		 -> main@ta7291p(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_back
    _main->_forward
    _stop->_set_speed
    _forward->_set_speed
    _back->_set_speed
    _set_speed->_pwm_load_duty_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2896
                                             10 COMMON     2     2      0
                                              0 BANK0      8     8      0
                  _SYSTEM_Initialize
                               _back
                            _forward
                         _initialize
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 1     1      0     810
                                              7 COMMON     1     1      0
                 _set_input1_pin_low
                 _set_input2_pin_low
                          _set_speed
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forward                                              3     1      2     875
                                              7 COMMON     3     1      2
                _set_input1_pin_high
                 _set_input2_pin_low
                          _set_speed
 ---------------------------------------------------------------------------------
 (2) _set_input2_pin_low                                   2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_input1_pin_high                                  2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _back                                                 3     1      2     875
                                              7 COMMON     3     1      2
                 _set_input1_pin_low
                _set_input2_pin_high
                          _set_speed
 ---------------------------------------------------------------------------------
 (2) _set_speed                                            3     1      2     535
                                              4 COMMON     3     1      2
                _pwm_load_duty_value
 ---------------------------------------------------------------------------------
 (3) _pwm_load_duty_value                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _set_input2_pin_high                                  2     2      0      55
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_input1_pin_low                                   2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _back
     _set_input1_pin_low
     _set_input2_pin_high
     _set_speed
       _pwm_load_duty_value
   _forward
     _set_input1_pin_high
     _set_input2_pin_low
     _set_speed
   _initialize
   _stop
     _set_input1_pin_low
     _set_input2_pin_low
     _set_speed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      19       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8       D       6       16.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      19      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat May 13 22:33:45 2023

                            l25 0726                              l51 069D                              l45 06B3  
                            l48 06A9                              u90 0748                              u91 0747  
                            u85 0736                             l110 06D1                             l113 06DB  
                           l107 06BD                             l123 075B                             l116 06C7  
                           l132 0710                             l126 073D                             l135 06FE  
                           l119 077D                             l129 06EC                             l901 07A1  
                           l911 07B1                             l903 07A3                             l841 0717  
                           l921 07D7                             l913 07B5                             l905 07A5  
                           l851 06A6                             l843 0719                             l835 0727  
                           l923 07DF                             l915 07C0                             l907 07A7  
                           l853 06A7                             l845 071C                             l837 0711  
                           l861 06D3                             l925 07E7                             l909 07AF  
                           l917 07C9                             l847 0721                             l839 0714  
                           l855 069A                             l871 06AA                             l863 06BF  
                           l919 07CE                             l849 06A3                             l857 06B5  
                           l865 073F                             l873 075D                             l881 077E  
                           l867 0748                             l859 06C9                             l875 06DD  
                           l891 0798                             l883 0781                             l869 0750  
                           l877 0700                             l893 0799                             l885 078F  
                           l879 06EE                             l895 079C                             l887 0793  
                           l897 079F                             l889 0796                             l899 07A0  
                           u100 078B                             u110 07AF                             u111 07AE  
                           u120 07C7                             u121 07C5                             u130 07C8  
                           u140 07CE                             u141 07CD                             u157 07BA  
                           _PR2 001B                             u167 07E2                     main@ta7291p 0023  
                           wreg 0009                            _LATA 010C                            _LATB 010D  
                          _TMR2 001A                            _WPUA 020C                            _WPUB 020D  
                          _back 06ED                            _main 077E                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E                            _stop 06DC  
                          start 0002   __end_of_OSCILLATOR_Initialize 06AA                           ?_back 0077  
                         ?_main 0070                           ?_stop 0070                           _T2CON 001C  
                         _TRISA 008C                           _TRISB 008D                           back@p 0079  
                _WDT_Initialize 069A                 __end_of_forward 0711                           stop@p 0077  
                         status 0003                           wtemp0 007E                 __initialization 07EF  
                  __end_of_back 06FF                    __end_of_main 07EF                    __end_of_stop 06ED  
                        ??_back 0079                          ??_main 007A                          ??_stop 0077  
        __end_of_WDT_Initialize 069E                          _CCPR3H 0312                          _CCPR3L 0311  
   __end_of_pwm_load_duty_value 073E                          _ANSELA 018C                          _ANSELB 018D  
                        _BORCON 0116                          _OSCCON 0099                          _WDTCON 0097  
                  _CCPTMRS0bits 029E   pwm_load_duty_value@duty_value 0070     __end_of_set_input1_pin_high 06D2  
   __end_of_set_input2_pin_high 06C8                       ??_forward 0079                 ?_WDT_Initialize 0070  
                   initialize@p 0071               _SYSTEM_Initialize 06AA         __end_of__initialization 07FD  
            ?_SYSTEM_Initialize 0070                  __pcstackCOMMON 0070                    __pidataBANK0 069E  
           ??_SYSTEM_Initialize 0070                  _OPTION_REGbits 0095       __end_of_SYSTEM_Initialize 06B4  
                    __pmaintext 077E                         _CCP3CON 0313                         _APFCON0 011D  
                       _APFCON1 011E                         _OSCTUNE 0098                  main@is_forward 0020  
                    _initialize 075C                         __ptext1 06DC                         __ptext2 075C  
                       __ptext3 06FF                         __ptext4 06D2                         __ptext5 06C8  
                       __ptext6 06ED                         __ptext7 073E                         __ptext8 0727  
                       __ptext9 06BE           _OSCILLATOR_Initialize 06A3                         _forward 06FF  
      ??_PIN_MANAGER_Initialize 0070            end_of_initialization 07FD                    forward@value 0077  
             __end_of_set_speed 075C                ??_WDT_Initialize 0070                     ?_initialize 0070  
        ?_OSCILLATOR_Initialize 0070             start_initialization 07EF      __end_of_set_input1_pin_low 06BE  
    __end_of_set_input2_pin_low 06DC                     __pdataBANK0 0028                  set_speed@speed 0074  
                     ___latbits 0001                   __pcstackBANK0 0020                       back@value 0077  
        _PIN_MANAGER_Initialize 0711                        ?_forward 0077                      set_speed@p 0076  
                      _PIR1bits 0011                       _set_speed 073E                       main@F2836 0028  
          set_input1_pin_high@p 0071             _pwm_load_duty_value 0727                       main@count 0021  
          set_input2_pin_high@p 0071            ?_pwm_load_duty_value 0070             _set_input1_pin_high 06C8  
           _set_input2_pin_high 06BE                      ?_set_speed 0074         ??_OSCILLATOR_Initialize 0070  
                  ??_initialize 0070            ?_set_input1_pin_high 0070            ?_set_input2_pin_high 0070  
                      __ptext10 06B4                        __ptext11 06AA                        __ptext12 069A  
                      __ptext13 0711                        __ptext14 06A3           ??_pwm_load_duty_value 0072  
            __end_of_initialize 077E             set_input1_pin_low@p 0071           ??_set_input1_pin_high 0070  
           set_input2_pin_low@p 0071              _set_input1_pin_low 06B4           ??_set_input2_pin_high 0070  
            _set_input2_pin_low 06D2                        forward@p 0079             ?_set_input1_pin_low 0070  
           ?_set_input2_pin_low 0070         ?_PIN_MANAGER_Initialize 0070                     ??_set_speed 0076  
          ??_set_input1_pin_low 0070            ??_set_input2_pin_low 0070  __end_of_PIN_MANAGER_Initialize 0727  
